{
  "version": 3,
  "sources": ["../../rt-client/src/models.ts", "../../rt-client/node_modules/tslib/tslib.es6.js", "../../rt-client/src/model-utils.ts", "../../rt-client/src/util/websocket-browser.ts", "../../rt-client/src/util/websocket-client.ts", "../../rt-client/src/util/auth.ts", "../../rt-client/src/util/interfaces.ts", "../../rt-client/src/util/connection-settings-browser.ts", "../../rt-client/src/util/message_queue.ts", "../../rt-client/src/util/crypto.ts", "../../rt-client/src/client.ts"],
  "sourcesContent": ["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport type Voice = \"alloy\" | \"shimmer\" | \"echo\";\nexport type AudioFormat = \"pcm16\" | \"g711-ulaw\" | \"g711-alaw\";\nexport type Modality = \"text\" | \"audio\";\n\nexport interface NoTurnDetection {\n  type: \"none\";\n}\n\nexport interface ServerVAD {\n  type: \"server_vad\";\n  threshold?: number;\n  prefix_padding_ms?: number;\n  silence_duration_ms?: number;\n}\n\nexport type TurnDetection = ServerVAD | null;\n\nexport interface FunctionToolChoice {\n  type: \"function\";\n  function: string;\n}\n\nexport type ToolChoice = \"auto\" | \"none\" | \"required\" | FunctionToolChoice;\n\nexport type MessageRole = \"system\" | \"assistant\" | \"user\";\n\nexport interface InputAudioTranscription {\n  model: \"whisper-1\";\n}\n\nexport interface ClientMessageBase {\n  event_id?: string;\n}\n\nexport type ToolsDefinition = Record<string, any>[];\n\nexport interface SessionUpdateParams {\n  model?: string;\n  modalities?: Modality[];\n  voice?: Voice;\n  instructions?: string;\n  input_audio_format?: AudioFormat;\n  output_audio_format?: AudioFormat;\n  input_audio_transcription?: InputAudioTranscription | null;\n  turn_detection?: TurnDetection;\n  tools?: ToolsDefinition;\n  tool_choice?: ToolChoice;\n  temperature?: number;\n  max_response_output_tokens?: number;\n}\n\nexport interface SessionUpdateMessage extends ClientMessageBase {\n  type: \"session.update\";\n  session: SessionUpdateParams;\n}\n\nexport interface InputAudioBufferAppendMessage extends ClientMessageBase {\n  type: \"input_audio_buffer.append\";\n  audio: string;\n}\n\nexport interface InputAudioBufferCommitMessage extends ClientMessageBase {\n  type: \"input_audio_buffer.commit\";\n}\n\nexport interface InputAudioBufferClearMessage extends ClientMessageBase {\n  type: \"input_audio_buffer.clear\";\n}\n\nexport const MessageItemType = \"message\" as const;\nexport type MessageItemType = typeof MessageItemType;\n\nexport interface InputTextContentPart {\n  type: \"input_text\";\n  text: string;\n}\n\nexport interface InputAudioContentPart {\n  type: \"input_audio\";\n  audio: string;\n  transcript?: string;\n}\n\nexport interface OutputTextContentPart {\n  type: \"text\";\n  text: string;\n}\n\nexport type SystemContentPart = InputTextContentPart;\nexport type UserContentPart = InputTextContentPart | InputAudioContentPart;\nexport type AssistantContentPart = OutputTextContentPart;\n\nexport type ItemParamStatus = \"completed\" | \"incomplete\";\n\nexport interface SystemMessageItem {\n  type: MessageItemType;\n  role: \"system\";\n  id?: string;\n  content: SystemContentPart[];\n  status?: ItemParamStatus;\n}\n\nexport interface UserMessageItem {\n  type: MessageItemType;\n  role: \"user\";\n  id?: string;\n  content: UserContentPart[];\n  status?: ItemParamStatus;\n}\n\nexport interface AssistantMessageItem {\n  type: MessageItemType;\n  role: \"assistant\";\n  id?: string;\n  content: AssistantContentPart[];\n  status?: ItemParamStatus;\n}\n\nexport type MessageItem =\n  | SystemMessageItem\n  | UserMessageItem\n  | AssistantMessageItem;\n\nexport interface FunctionCallItem {\n  type: \"function_call\";\n  id?: string;\n  name: string;\n  call_id: string;\n  arguments: string;\n  status?: ItemParamStatus;\n}\n\nexport interface FunctionCallOutputItem {\n  type: \"function_call_output\";\n  id?: string;\n  call_id: string;\n  output: string;\n  status?: ItemParamStatus;\n}\n\nexport type Item = MessageItem | FunctionCallItem | FunctionCallOutputItem;\n\nexport interface ItemCreateMessage extends ClientMessageBase {\n  type: \"conversation.item.create\";\n  previous_item_id?: string;\n  item: Item;\n}\n\nexport interface ItemTruncateMessage extends ClientMessageBase {\n  type: \"conversation.item.truncate\";\n  item_id: string;\n  content_index: number;\n  audio_end_ms: number;\n}\n\nexport interface ItemDeleteMessage extends ClientMessageBase {\n  type: \"conversation.item.delete\";\n  item_id: string;\n}\n\nexport interface ResponseCreateParams {\n  commit: boolean;\n  cancel_previous: boolean;\n  append_input_items?: Item[];\n  input_items?: Item[];\n  instructions?: string;\n  modalities?: Modality[];\n  voice?: Voice;\n  temperature?: number;\n  max_output_tokens?: number;\n  tools?: ToolsDefinition;\n  tool_choice?: ToolChoice;\n  output_audio_format?: AudioFormat;\n}\n\nexport interface ResponseCreateMessage extends ClientMessageBase {\n  type: \"response.create\";\n  response?: ResponseCreateParams;\n}\n\nexport interface ResponseCancelMessage extends ClientMessageBase {\n  type: \"response.cancel\";\n}\n\nexport interface RealtimeError {\n  message: string;\n  type?: string;\n  code?: string;\n  param?: string;\n  event_id?: string;\n}\n\nexport interface ServerMessageBase {\n  event_id: string;\n}\n\nexport interface ErrorMessage extends ServerMessageBase {\n  type: \"error\";\n  error: RealtimeError;\n}\n\nexport interface Session {\n  id: string;\n  model: string;\n  modalities: Modality[];\n  instructions: string;\n  voice: Voice;\n  input_audio_format: AudioFormat;\n  output_audio_format: AudioFormat;\n  input_audio_transcription?: InputAudioTranscription;\n  turn_detection: TurnDetection;\n  tools: ToolsDefinition;\n  tool_choice: ToolChoice;\n  temperature: number;\n  max_response_output_tokens?: number;\n}\n\nexport interface SessionCreatedMessage extends ServerMessageBase {\n  type: \"session.created\";\n  session: Session;\n}\n\nexport interface SessionUpdatedMessage extends ServerMessageBase {\n  type: \"session.updated\";\n  session: Session;\n}\n\nexport interface InputAudioBufferCommittedMessage extends ServerMessageBase {\n  type: \"input_audio_buffer.committed\";\n  previous_item_id?: string;\n  item_id: string;\n}\n\nexport interface InputAudioBufferClearedMessage extends ServerMessageBase {\n  type: \"input_audio_buffer.cleared\";\n}\n\nexport interface InputAudioBufferSpeechStartedMessage\n  extends ServerMessageBase {\n  type: \"input_audio_buffer.speech_started\";\n  audio_start_ms: number;\n  item_id: string;\n}\n\nexport interface InputAudioBufferSpeechStoppedMessage\n  extends ServerMessageBase {\n  type: \"input_audio_buffer.speech_stopped\";\n  audio_end_ms: number;\n  item_id: string;\n}\n\nexport type ResponseItemStatus = \"in_progress\" | \"completed\" | \"incomplete\";\n\nexport interface ResponseItemInputTextContentPart {\n  type: \"input_text\";\n  text: string;\n}\n\nexport interface ResponseItemInputAudioContentPart {\n  type: \"input_audio\";\n  transcript?: string;\n}\n\nexport interface ResponseItemTextContentPart {\n  type: \"text\";\n  text: string;\n}\n\nexport interface ResponseItemAudioContentPart {\n  type: \"audio\";\n  transcript?: string;\n}\n\nexport type ResponseItemContentPart =\n  | ResponseItemInputTextContentPart\n  | ResponseItemInputAudioContentPart\n  | ResponseItemTextContentPart\n  | ResponseItemAudioContentPart;\n\nexport interface ResponseItemBase {\n  id?: string;\n}\n\nexport interface ResponseMessageItem extends ResponseItemBase {\n  type: MessageItemType;\n  status: ResponseItemStatus;\n  role: MessageRole;\n  content: ResponseItemContentPart[];\n}\n\nexport interface ResponseFunctionCallItem extends ResponseItemBase {\n  type: \"function_call\";\n  status: ResponseItemStatus;\n  name: string;\n  call_id: string;\n  arguments: string;\n}\n\nexport interface ResponseFunctionCallOutputItem extends ResponseItemBase {\n  type: \"function_call_output\";\n  call_id: string;\n  output: string;\n}\n\nexport type ResponseItem =\n  | ResponseMessageItem\n  | ResponseFunctionCallItem\n  | ResponseFunctionCallOutputItem;\n\nexport interface ItemCreatedMessage extends ServerMessageBase {\n  type: \"conversation.item.created\";\n  previous_item_id?: string;\n  item: ResponseItem;\n}\n\nexport interface ItemTruncatedMessage extends ServerMessageBase {\n  type: \"conversation.item.truncated\";\n  item_id: string;\n  content_index: number;\n  audio_end_ms: number;\n}\n\nexport interface ItemDeletedMessage extends ServerMessageBase {\n  type: \"conversation.item.deleted\";\n  item_id: string;\n}\n\nexport interface ItemInputAudioTranscriptionCompletedMessage\n  extends ServerMessageBase {\n  type: \"conversation.item.input_audio_transcription.completed\";\n  item_id: string;\n  content_index: number;\n  transcript: string;\n}\n\nexport interface ItemInputAudioTranscriptionFailedMessage\n  extends ServerMessageBase {\n  type: \"conversation.item.input_audio_transcription.failed\";\n  item_id: string;\n  content_index: number;\n  error: RealtimeError;\n}\n\nexport type ResponseStatus =\n  | \"in_progress\"\n  | \"completed\"\n  | \"cancelled\"\n  | \"incomplete\"\n  | \"failed\";\n\nexport interface ResponseCancelledDetails {\n  type: \"cancelled\";\n  reason: \"turn_detected\" | \"client_cancelled\";\n}\n\nexport interface ResponseIncompleteDetails {\n  type: \"incomplete\";\n  reason: \"max_output_tokens\" | \"content_filter\";\n}\n\nexport interface ResponseFailedDetails {\n  type: \"failed\";\n  error: RealtimeError;\n}\n\nexport type ResponseStatusDetails =\n  | ResponseCancelledDetails\n  | ResponseIncompleteDetails\n  | ResponseFailedDetails;\n\nexport interface Usage {\n  total_tokens: number;\n  input_tokens: number;\n  output_tokens: number;\n}\n\nexport interface Response {\n  id: string;\n  status: ResponseStatus;\n  status_details?: ResponseStatusDetails;\n  output: ResponseItem[];\n  usage?: Usage;\n}\n\nexport interface ResponseCreatedMessage extends ServerMessageBase {\n  type: \"response.created\";\n  response: Response;\n}\n\nexport interface ResponseDoneMessage extends ServerMessageBase {\n  type: \"response.done\";\n  response: Response;\n}\n\nexport interface ResponseOutputItemAddedMessage extends ServerMessageBase {\n  type: \"response.output_item.added\";\n  response_id: string;\n  output_index: number;\n  item: ResponseItem;\n}\n\nexport interface ResponseOutputItemDoneMessage extends ServerMessageBase {\n  type: \"response.output_item.done\";\n  response_id: string;\n  output_index: number;\n  item: ResponseItem;\n}\n\nexport interface ResponseContentPartAddedMessage extends ServerMessageBase {\n  type: \"response.content_part.added\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  part: ResponseItemContentPart;\n}\n\nexport interface ResponseContentPartDoneMessage extends ServerMessageBase {\n  type: \"response.content_part.done\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  part: ResponseItemContentPart;\n}\n\nexport interface ResponseTextDeltaMessage extends ServerMessageBase {\n  type: \"response.text.delta\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  delta: string;\n}\n\nexport interface ResponseTextDoneMessage extends ServerMessageBase {\n  type: \"response.text.done\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  text: string;\n}\n\nexport interface ResponseAudioTranscriptDeltaMessage extends ServerMessageBase {\n  type: \"response.audio_transcript.delta\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  delta: string;\n}\n\nexport interface ResponseAudioTranscriptDoneMessage extends ServerMessageBase {\n  type: \"response.audio_transcript.done\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  transcript: string;\n}\n\nexport interface ResponseAudioDeltaMessage extends ServerMessageBase {\n  type: \"response.audio.delta\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n  delta: string;\n}\n\nexport interface ResponseAudioDoneMessage extends ServerMessageBase {\n  type: \"response.audio.done\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  content_index: number;\n}\n\nexport interface ResponseFunctionCallArgumentsDeltaMessage\n  extends ServerMessageBase {\n  type: \"response.function_call_arguments.delta\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  call_id: string;\n  delta: string;\n}\n\nexport interface ResponseFunctionCallArgumentsDoneMessage\n  extends ServerMessageBase {\n  type: \"response.function_call_arguments.done\";\n  response_id: string;\n  item_id: string;\n  output_index: number;\n  call_id: string;\n  name: string;\n  arguments: string;\n}\n\nexport interface RateLimits {\n  name: string;\n  limit: number;\n  remaining: number;\n  reset_seconds: number;\n}\n\nexport interface RateLimitsUpdatedMessage extends ServerMessageBase {\n  type: \"rate_limits.updated\";\n  rate_limits: RateLimits[];\n}\n\nexport type UserMessageType =\n  | SessionUpdateMessage\n  | InputAudioBufferAppendMessage\n  | InputAudioBufferCommitMessage\n  | InputAudioBufferClearMessage\n  | ItemCreateMessage\n  | ItemTruncateMessage\n  | ItemDeleteMessage\n  | ResponseCreateMessage\n  | ResponseCancelMessage;\n\nexport type ServerMessageType =\n  | ErrorMessage\n  | SessionCreatedMessage\n  | SessionUpdatedMessage\n  | InputAudioBufferCommittedMessage\n  | InputAudioBufferClearedMessage\n  | InputAudioBufferSpeechStartedMessage\n  | InputAudioBufferSpeechStoppedMessage\n  | ItemCreatedMessage\n  | ItemTruncatedMessage\n  | ItemDeletedMessage\n  | ItemInputAudioTranscriptionCompletedMessage\n  | ItemInputAudioTranscriptionFailedMessage\n  | ResponseCreatedMessage\n  | ResponseDoneMessage\n  | ResponseOutputItemAddedMessage\n  | ResponseOutputItemDoneMessage\n  | ResponseContentPartAddedMessage\n  | ResponseContentPartDoneMessage\n  | ResponseTextDeltaMessage\n  | ResponseTextDoneMessage\n  | ResponseAudioTranscriptDeltaMessage\n  | ResponseAudioTranscriptDoneMessage\n  | ResponseAudioDeltaMessage\n  | ResponseAudioDoneMessage\n  | ResponseFunctionCallArgumentsDeltaMessage\n  | ResponseFunctionCallArgumentsDoneMessage\n  | RateLimitsUpdatedMessage;\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServerMessageType } from \"./models\";\n\nconst isRealtimeEvent = (message: unknown): message is { type: string } =>\n  typeof message === \"object\" && message !== null && \"type\" in message;\n\nexport const isServerMessageType = (\n  message: unknown,\n): message is ServerMessageType =>\n  isRealtimeEvent(message) &&\n  [\n    \"error\",\n    \"session.created\",\n    \"session.updated\",\n    \"input_audio_buffer.committed\",\n    \"input_audio_buffer.cleared\",\n    \"input_audio_buffer.speech_started\",\n    \"input_audio_buffer.speech_stopped\",\n    \"conversation.item.created\",\n    \"conversation.item.truncated\",\n    \"conversation.item.deleted\",\n    \"conversation.item.input_audio_transcription.completed\",\n    \"conversation.item.input_audio_transcription.failed\",\n    \"response.created\",\n    \"response.done\",\n    \"response.output_item.added\",\n    \"response.output_item.done\",\n    \"response.content_part.added\",\n    \"response.content_part.done\",\n    \"response.text.delta\",\n    \"response.text.done\",\n    \"response.audio_transcript.delta\",\n    \"response.audio_transcript.done\",\n    \"response.audio.delta\",\n    \"response.audio.done\",\n    \"response.function_call_arguments.delta\",\n    \"response.function_call_arguments.done\",\n    \"rate_limits.updated\",\n  ].includes(message.type);\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ConnectionSettings } from \"./interfaces\";\n\ntype _WS = WebSocket;\nconst _WS = WebSocket;\nconst _CloseEvent = CloseEvent;\nconst _ErrorEvent = ErrorEvent;\nconst _MessageEvent = MessageEvent;\nexport {\n  _WS as WebSocket,\n  _MessageEvent as MessageEvent,\n  _CloseEvent as CloseEvent,\n  _ErrorEvent as ErrorEvent,\n};\n\nexport const sendMessage = (\n  socket: WebSocket,\n  message: string | ArrayBufferLike | ArrayBufferView,\n): Promise<void> => {\n  if (socket.readyState !== WebSocket.OPEN) {\n    return Promise.reject(new Error(\"Socket is not open\"));\n  }\n  socket.send(message);\n  return Promise.resolve();\n};\n\nexport async function getWebsocket(\n  settings: ConnectionSettings,\n): Promise<WebSocket> {\n  if (settings.policy != undefined) {\n    settings = await settings.policy(settings);\n  }\n  if (settings.headers != undefined) {\n    throw new Error(\"Headers are not supported in the browser\");\n  }\n  return new WebSocket(settings.uri, settings.protocols);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ConnectionSettings } from \"./interfaces\";\nimport {\n  WebSocket,\n  ErrorEvent,\n  CloseEvent,\n  MessageEvent,\n  sendMessage,\n  getWebsocket,\n} from \"./websocket\";\n\ntype ResolveFn<T> = (value: IteratorResult<T>) => void;\ntype RejectFn<E> = (reason: E) => void;\n\nexport type ValidatorResult<T> =\n  | { success: true; message: T }\n  | { success: false; error: Error };\n\nexport const validationSuccess = <T>(message: T): ValidatorResult<T> => ({\n  success: true,\n  message,\n});\nexport const validationError = <T>(error: Error): ValidatorResult<T> => ({\n  success: false,\n  error,\n});\nconst isValidatorSuccess = <T>(\n  result: ValidatorResult<T>,\n): result is { success: true; message: T } => result.success;\n\nexport type ValidateProtocolMessage<T> = (\n  message: MessageEvent,\n) => ValidatorResult<T>;\nexport type SerializeMessage<T> = (\n  message: T,\n) => string | ArrayBufferLike | ArrayBufferView;\n\nexport interface MessageProtocolHandler<U, D> {\n  validate: ValidateProtocolMessage<D>;\n  serialize: SerializeMessage<U>;\n}\n\nexport class WebSocketClient<U, D> implements AsyncIterable<D> {\n  private socket: WebSocket;\n  private connectedPromise: Promise<void>;\n  private closedPromise: Promise<void> | undefined = undefined;\n  private error: Error | undefined;\n  private messageQueue: D[] = [];\n  private validate: ValidateProtocolMessage<D>;\n  private serialize: SerializeMessage<U>;\n\n  private receiverQueue: [ResolveFn<D>, RejectFn<Error>][] = [];\n  private done: boolean = false;\n\n  constructor(\n    settings: ConnectionSettings,\n    handler: MessageProtocolHandler<U, D>,\n  ) {\n    this.validate = handler.validate;\n    this.serialize = handler.serialize;\n    this.connectedPromise = new Promise(async (resolve, reject) => {\n      this.socket = await getWebsocket(settings);\n      this.socket.onopen = () => {\n        this.socket.onmessage = this.getMessageHandler();\n        this.closedPromise = new Promise((resolve) => {\n          this.socket.onclose = this.getClosedHandler(resolve);\n        });\n        this.socket.onerror = this.handleError;\n        resolve();\n      };\n      this.socket.onerror = (event: ErrorEvent) => {\n        this.error = event.error;\n        reject(event);\n      };\n    });\n  }\n\n  private handleError(event: ErrorEvent) {\n    this.error = event.error;\n    while (this.receiverQueue.length > 0) {\n      const [_, reject] = this.receiverQueue.shift()!;\n      reject(event.error);\n    }\n  }\n\n  private getClosedHandler(\n    closeResolve: (_: void) => void,\n  ): (_: CloseEvent) => void {\n    return (_: CloseEvent) => {\n      this.done = true;\n      while (this.receiverQueue.length > 0) {\n        const [resolve, reject] = this.receiverQueue.shift()!;\n        if (this.error) {\n          reject(this.error);\n        } else {\n          resolve({ value: undefined, done: true });\n        }\n      }\n      closeResolve();\n    };\n  }\n\n  private getMessageHandler(): (event: MessageEvent) => void {\n    const self = this;\n    return (event: MessageEvent) => {\n      const result = self.validate(event);\n      if (isValidatorSuccess(result)) {\n        const { message } = result;\n        if (self.receiverQueue.length > 0) {\n          const [resolve, _] = self.receiverQueue.shift()!;\n          resolve({ value: message, done: false });\n        } else {\n          self.messageQueue.push(message);\n        }\n      } else {\n        self.error = result.error;\n        self.socket.close(1000, \"Unexpected message received\");\n      }\n    };\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<D> {\n    return {\n      next: (): Promise<IteratorResult<D>> => {\n        if (this.error) {\n          return Promise.reject(this.error);\n        } else if (this.done) {\n          return Promise.resolve({ value: undefined, done: true });\n        } else if (this.messageQueue.length > 0) {\n          const message = this.messageQueue.shift()!;\n          return Promise.resolve({ value: message, done: false });\n        } else {\n          return new Promise((resolve, reject) => {\n            this.receiverQueue.push([resolve, reject]);\n          });\n        }\n      },\n    };\n  }\n\n  async send(message: U): Promise<void> {\n    await this.connectedPromise;\n    if (this.error) {\n      throw this.error;\n    }\n    const serialized = this.serialize(message);\n    return sendMessage(this.socket, serialized);\n  }\n\n  async close(): Promise<void> {\n    await this.connectedPromise;\n    if (this.done) {\n      return;\n    }\n    this.socket.close();\n    await this.closedPromise;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport interface KeyCredential {\n  key: string;\n}\n\nexport interface AccessToken {\n  token: string;\n  expiresOnTimestamp: number;\n  refreshAfterTimestamp?: number;\n}\n\nexport interface TokenCredential {\n  getToken(scopes: string | string[], options?: unknown): Promise<AccessToken>;\n}\n\nexport function isKeyCredential(\n  credential: unknown,\n): credential is KeyCredential {\n  return (\n    typeof credential === \"object\" &&\n    credential !== null &&\n    \"key\" in credential &&\n    typeof (credential as KeyCredential).key === \"string\"\n  );\n}\n\nexport function isTokenCredential(\n  credential: unknown,\n): credential is TokenCredential {\n  return (\n    typeof credential === \"object\" &&\n    credential !== null &&\n    \"getToken\" in credential &&\n    typeof (credential as TokenCredential).getToken === \"function\"\n  );\n}\n\nexport const isCredential = (\n  credential: unknown,\n): credential is KeyCredential | TokenCredential =>\n  isKeyCredential(credential) || isTokenCredential(credential);\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport type WebSocketPolicy = (\n  ConnectionSettings: ConnectionSettings,\n) => Promise<ConnectionSettings>;\n\nexport interface ConnectionSettings {\n  uri: URL;\n  protocols?: string[];\n  headers?: Record<string, string>;\n  policy?: WebSocketPolicy;\n  requestId?: string;\n}\n\nexport interface RTOpenAIOptions {\n  model: string;\n}\n\nexport interface RTAzureOpenAIOptions {\n  deployment: string;\n  requestId?: string;\n}\n\nexport const isRTOpenAIOptions = (\n  options: unknown,\n): options is RTOpenAIOptions => {\n  return (\n    typeof options === \"object\" &&\n    options !== null &&\n    \"model\" in options &&\n    typeof (options as RTOpenAIOptions).model === \"string\"\n  );\n};\n\nexport const isRTAzureOpenAIOptions = (\n  options: unknown,\n): options is RTAzureOpenAIOptions => {\n  return (\n    typeof options === \"object\" &&\n    options !== null &&\n    \"deployment\" in options &&\n    typeof (options as RTAzureOpenAIOptions).deployment === \"string\"\n  );\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isKeyCredential, KeyCredential, TokenCredential } from \"./auth\";\nimport {\n  ConnectionSettings,\n  RTAzureOpenAIOptions,\n  RTOpenAIOptions,\n} from \"./interfaces\";\n\nfunction generateUUID() {\n  if (typeof crypto !== \"undefined\" && crypto.randomUUID) {\n    return crypto.randomUUID();\n  } else if (\n    typeof window !== \"undefined\" &&\n    window.crypto &&\n    window.crypto.getRandomValues\n  ) {\n    const array = new Uint8Array(16);\n    window.crypto.getRandomValues(array);\n    array[6] = (array[6] & 0x0f) | 0x40; // Version 4\n    array[8] = (array[8] & 0x3f) | 0x80; // Variant 10\n    return [...array]\n      .map(\n        (b, i) =>\n          (i === 4 || i === 6 || i === 8 || i === 10 ? \"-\" : \"\") +\n          b.toString(16).padStart(2, \"0\"),\n      )\n      .join(\"\");\n  } else {\n    throw new Error(\"Crypto API not available\");\n  }\n}\n\nexport function openAISettings(\n  credential: KeyCredential,\n  options: RTOpenAIOptions,\n): ConnectionSettings {\n  const uri = new URL(\"wss://api.openai.com/v1/realtime\");\n  uri.searchParams.set(\"model\", options.model);\n  return {\n    uri,\n    protocols: [\n      \"realtime\",\n      `openai-insecure-api-key.${credential.key}`,\n      \"openai-beta.realtime-v1\",\n    ],\n  };\n}\n\nexport function azureOpenAISettings(\n  uri: URL,\n  credential: KeyCredential | TokenCredential,\n  options: RTAzureOpenAIOptions,\n): ConnectionSettings {\n  const requestId = options.requestId ?? generateUUID();\n\n  const scopes = [\"https://cognitiveservices.azure.com/.default\"];\n\n  uri.searchParams.set(\"api-version\", \"2024-10-01-preview\");\n  uri.searchParams.set(\"x-ms-client-request-id\", requestId!);\n  uri.searchParams.set(\"deployment\", options.deployment);\n  uri.pathname = \"openai/realtime\";\n  return {\n    uri,\n    headers: undefined,\n    policy: async (settings) => {\n      if (isKeyCredential(credential)) {\n        settings.uri.searchParams.set(\"api-key\", credential.key);\n      } else {\n        const token = await credential.getToken(scopes);\n        settings.uri.searchParams.set(\"Authorization\", `Bearer ${token.token}`);\n      }\n      return settings;\n    },\n    requestId: requestId,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ntype ReceiveFunction<T> = () => Promise<T | null>;\n\ntype ResolveFn<T> = (value: T | null) => void;\ntype RejectFn<E> = (reason: E) => void;\n\ntype Predicate<T> = (message: T) => boolean;\n\nexport class MessageQueue<T> {\n  private messages: T[] = [];\n  protected waitingReceivers: [\n    Predicate<T>,\n    [ResolveFn<T>, RejectFn<Error>],\n    AbortController,\n  ][] = [];\n  private isPolling: boolean = false;\n  private pollPromise: Promise<void> | null = null;\n\n  constructor(private receiveDelegate: ReceiveFunction<T>) {}\n\n  protected pushBack(message: T) {\n    this.messages.push(message);\n  }\n\n  private findAndRemove(predicate: Predicate<T>): T | null {\n    const index = this.messages.findIndex(predicate);\n    if (index === -1) {\n      return null;\n    }\n    return this.messages.splice(index, 1)[0];\n  }\n\n  private async pollReceive(): Promise<void> {\n    if (this.isPolling) {\n      return;\n    }\n\n    this.isPolling = true;\n    this.pollPromise = this.doPollReceive();\n    return this.pollPromise;\n  }\n\n  private async doPollReceive(): Promise<void> {\n    try {\n      while (this.isPolling) {\n        const message = await this.receiveDelegate();\n        if (message === null) {\n          this.notifyEndOfStream();\n          break;\n        }\n        this.notifyReceiver(message);\n        if (this.waitingReceivers.length === 0) {\n          break;\n        }\n      }\n    } catch (error) {\n      this.notifyError(error);\n    } finally {\n      this.isPolling = false;\n      this.pollPromise = null;\n    }\n  }\n\n  private notifyError(error: Error): void {\n    while (this.waitingReceivers.length > 0) {\n      const [_predicate, [_resolve, reject], _controller] =\n        this.waitingReceivers.shift()!;\n      reject(error);\n    }\n  }\n\n  private notifyEndOfStream(): void {\n    while (this.waitingReceivers.length > 0) {\n      const [_predicate, [resolve, _reject], _controller] =\n        this.waitingReceivers.shift()!;\n      resolve(null);\n    }\n  }\n\n  protected notifyReceiver(message: T): void {\n    const index = this.waitingReceivers.findIndex(\n      ([predicate, [_resolve, _reject], _controller]) => predicate(message),\n    );\n    if (index === -1) {\n      this.pushBack(message);\n      return;\n    }\n\n    const [_predicate, [resolve, _reject], _controller] =\n      this.waitingReceivers.splice(index, 1)[0];\n    resolve(message);\n  }\n\n  queuedMessageCount(): number {\n    return this.messages.length;\n  }\n\n  receive(predicate: Predicate<T>, abort?: AbortController): Promise<T | null> {\n    const foundMessage = this.findAndRemove(predicate);\n    if (foundMessage !== null) {\n      return Promise.resolve(foundMessage);\n    }\n\n    return new Promise<T | null>(async (resolve, reject) => {\n      this.waitingReceivers.push([\n        predicate,\n        [resolve, reject],\n        abort || new AbortController(),\n      ]);\n\n      await this.pollReceive();\n    });\n  }\n}\nexport class MessageQueueWithError<T> extends MessageQueue<T> {\n  private error?: T = undefined;\n\n  constructor(\n    receiveDelegate: ReceiveFunction<T>,\n    private errorPredicate: (message: T) => boolean,\n  ) {\n    super(receiveDelegate);\n  }\n\n  private notifyErrorMessage(message: T): void {\n    while (this.waitingReceivers.length > 0) {\n      const [_, [resolve, _reject]] = this.waitingReceivers.shift()!;\n      resolve(message);\n    }\n  }\n\n  protected notifyReceiver(message: T): void {\n    if (this.errorPredicate(message)) {\n      this.error = message;\n      this.notifyErrorMessage(message);\n      return;\n    }\n    const index = this.waitingReceivers.findIndex(\n      ([predicate, [_resolve, _reject], _controller]) => predicate(message),\n    );\n    if (index === -1) {\n      this.pushBack(message);\n      return;\n    }\n\n    const [_predicate, [resolve, _reject], _controller] =\n      this.waitingReceivers.splice(index, 1)[0];\n    resolve(message);\n  }\n\n  async receive(predicate: (message: T) => boolean): Promise<T | null> {\n    if (this.error !== undefined) {\n      return this.error;\n    }\n    const message = await super.receive(\n      (message) => predicate(message) || this.errorPredicate(message),\n    );\n    return message;\n  }\n}\n\nexport class SharedEndQueue<T> {\n  private queue: T[] = [];\n  private lock: Promise<void> = Promise.resolve();\n\n  constructor(\n    private receiveDelegate: () => Promise<T>,\n    private errorPredicate: (message: T) => boolean,\n    private endPredicate: (message: T) => boolean,\n  ) {}\n\n  async receive(predicate: (message: T) => boolean): Promise<T> {\n    const release = await this.acquireLock();\n    try {\n      for (let i = 0; i < this.queue.length; i++) {\n        const message = this.queue[i];\n        if (predicate(message)) {\n          this.queue.splice(i, 1);\n          return message;\n        } else if (this.endPredicate(message)) {\n          return message;\n        }\n      }\n\n      while (true) {\n        const message = await this.receiveDelegate();\n        if (\n          message === null ||\n          this.errorPredicate(message) ||\n          predicate(message)\n        ) {\n          return message;\n        }\n        if (this.endPredicate(message)) {\n          this.queue.push(message);\n          return message;\n        }\n        this.queue.push(message);\n      }\n    } finally {\n      release();\n    }\n  }\n\n  private async acquireLock(): Promise<() => void> {\n    let release: () => void;\n    const newLock = new Promise<void>((resolve) => {\n      release = resolve;\n    });\n    const oldLock = this.lock;\n    this.lock = newLock;\n    await oldLock;\n    return release!;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function getRandomValues(array: Uint8Array): Uint8Array {\n  if (typeof crypto !== \"undefined\" && crypto.getRandomValues) {\n    return crypto.getRandomValues(array);\n  } else if (\n    typeof window !== \"undefined\" &&\n    window.crypto &&\n    window.crypto.getRandomValues\n  ) {\n    return window.crypto.getRandomValues(array);\n  } else {\n    throw new Error(\"No secure random number generator available.\");\n  }\n}\n\nexport function generateId(prefix: string, length: number): string {\n  const array = new Uint8Array(length);\n  getRandomValues(array);\n  const base64 = btoa(String.fromCharCode(...array))\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=/g, \"\");\n\n  return `${prefix}-${base64}`.slice(0, length);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isServerMessageType } from \"./model-utils\";\nimport {\n  InputAudioBufferSpeechStoppedMessage,\n  Item,\n  ItemInputAudioTranscriptionCompletedMessage,\n  ItemInputAudioTranscriptionFailedMessage,\n  MessageRole,\n  RealtimeError,\n  Response,\n  ResponseAudioDeltaMessage,\n  ResponseAudioDoneMessage,\n  ResponseAudioTranscriptDeltaMessage,\n  ResponseAudioTranscriptDoneMessage,\n  ResponseContentPartAddedMessage,\n  ResponseContentPartDoneMessage,\n  ResponseFunctionCallItem,\n  ResponseItem,\n  ResponseItemAudioContentPart,\n  ResponseItemStatus,\n  ResponseItemTextContentPart,\n  ResponseMessageItem,\n  ResponseStatus,\n  ResponseStatusDetails,\n  ServerMessageType,\n  Session,\n  SessionUpdateParams,\n  Usage,\n  UserMessageType,\n} from \"./models\";\nimport {\n  validationError,\n  validationSuccess,\n  WebSocketClient,\n} from \"./util/websocket-client\";\nimport { MessageEvent } from \"./util/websocket\";\nimport {\n  isCredential,\n  isKeyCredential,\n  KeyCredential,\n  TokenCredential,\n} from \"./util/auth\";\nimport {\n  ConnectionSettings,\n  isRTAzureOpenAIOptions,\n  isRTOpenAIOptions,\n  RTAzureOpenAIOptions,\n  RTOpenAIOptions,\n} from \"./util/interfaces\";\nimport {\n  azureOpenAISettings,\n  openAISettings,\n} from \"./util/connection-settings\";\nimport { MessageQueueWithError, SharedEndQueue } from \"./util/message_queue\";\nimport { generateId } from \"./util/crypto\";\n\nexport class LowLevelRTClient {\n  public requestId: string | undefined;\n  private client: WebSocketClient<UserMessageType, ServerMessageType>;\n\n  private getWebsocket(\n    settings: ConnectionSettings,\n  ): WebSocketClient<UserMessageType, ServerMessageType> {\n    const handler = {\n      validate: (event: MessageEvent) => {\n        if (typeof event.data !== \"string\") {\n          return validationError<ServerMessageType>(\n            new Error(\"Invalid message type\"),\n          );\n        }\n        try {\n          const data = JSON.parse(event.data as string);\n          if (isServerMessageType(data)) {\n            return validationSuccess(data);\n          }\n          return validationError<ServerMessageType>(\n            new Error(\"Invalid message type\"),\n          );\n        } catch (error) {\n          return validationError<ServerMessageType>(\n            new Error(\"Invalid JSON message\"),\n          );\n        }\n      },\n      serialize: (message: UserMessageType) => JSON.stringify(message),\n    };\n\n    return new WebSocketClient<UserMessageType, ServerMessageType>(\n      settings,\n      handler,\n    );\n  }\n\n  constructor(credential: KeyCredential, options: RTOpenAIOptions);\n  constructor(\n    uri: URL,\n    credential: KeyCredential | TokenCredential,\n    options: RTAzureOpenAIOptions,\n  );\n  constructor(\n    uriOrCredential: URL | KeyCredential,\n    credentialOrOptions: KeyCredential | TokenCredential | RTOpenAIOptions,\n    options?: RTAzureOpenAIOptions,\n  ) {\n    const settings = (() => {\n      if (\n        isKeyCredential(uriOrCredential) &&\n        isRTOpenAIOptions(credentialOrOptions)\n      ) {\n        return openAISettings(uriOrCredential, credentialOrOptions);\n      } else if (\n        isCredential(credentialOrOptions) &&\n        isRTAzureOpenAIOptions(options)\n      ) {\n        return azureOpenAISettings(\n          uriOrCredential as URL,\n          credentialOrOptions,\n          options,\n        );\n      } else {\n        throw new Error(\n          \"Invalid combination of arguments to initialize the Realtime client\",\n        );\n      }\n    })();\n    this.requestId = settings.requestId;\n    this.client = this.getWebsocket(settings);\n  }\n\n  async *messages(): AsyncIterable<ServerMessageType> {\n    for await (const message of this.client) {\n      yield message;\n    }\n  }\n\n  async send(message: UserMessageType): Promise<void> {\n    await this.client.send(message);\n  }\n\n  async close(): Promise<void> {\n    await this.client.close();\n  }\n}\n\nexport class RTError extends Error {\n  constructor(private errorDetails: RealtimeError) {\n    super(errorDetails.message);\n    Object.setPrototypeOf(this, RTError.prototype);\n  }\n\n  get code(): string | undefined {\n    return this.errorDetails.code;\n  }\n\n  get param(): string | undefined {\n    return this.errorDetails.param;\n  }\n\n  get eventId(): string | undefined {\n    return this.errorDetails.event_id;\n  }\n}\n\ntype Optional<T> = T | undefined;\n\nclass RTInputAudioItem {\n  public type: \"input_audio\" = \"input_audio\";\n  public audioEndMillis: Optional<number> = undefined;\n  public transcription: Optional<string> = undefined;\n\n  private waitPromise: Promise<void> | null = null;\n\n  private constructor(\n    private id: string,\n    public audioStartMillis: Optional<number>,\n    private hasTranscription: boolean,\n    private queue: MessageQueueWithError<ServerMessageType>,\n  ) {}\n\n  static create(\n    id: string,\n    audioStartMillis: Optional<number>,\n    hasTranscription: boolean,\n    queue: MessageQueueWithError<ServerMessageType>,\n  ): RTInputAudioItem {\n    return new RTInputAudioItem(id, audioStartMillis, hasTranscription, queue);\n  }\n\n  private async wait(): Promise<void> {\n    const itemIdValidMessage = (\n      message: ServerMessageType,\n    ): message is\n      | InputAudioBufferSpeechStoppedMessage\n      | ItemInputAudioTranscriptionCompletedMessage\n      | ItemInputAudioTranscriptionFailedMessage =>\n      [\n        \"input_audio_buffer.speech_stopped\",\n        \"conversation.item.input_audio_transcription.completed\",\n        \"conversation.item.input_audio_transcription.failed\",\n      ].includes(message.type);\n\n    while (true) {\n      const message = await this.queue.receive(\n        (m) =>\n          (itemIdValidMessage(m) && m.item_id == this.id) ||\n          (m.type === \"conversation.item.created\" && m.item.id == this.id),\n      );\n      if (message === null) {\n        return;\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"input_audio_buffer.speech_stopped\") {\n        this.audioEndMillis = message.audio_end_ms;\n        if (!this.hasTranscription) {\n          return;\n        }\n      } else if (\n        message.type === \"conversation.item.created\" &&\n        !this.hasTranscription\n      ) {\n        return;\n      } else if (\n        message.type === \"conversation.item.input_audio_transcription.completed\"\n      ) {\n        this.transcription = message.transcript;\n        return;\n      } else if (\n        message.type === \"conversation.item.input_audio_transcription.failed\"\n      ) {\n        throw new RTError(message.error);\n      }\n    }\n  }\n\n  waitForCompletion(): Promise<void> {\n    if (!this.waitPromise) {\n      this.waitPromise = this.wait();\n    }\n    return this.waitPromise;\n  }\n}\n\nexport type { RTInputAudioItem };\n\n/* TODO: Move to PAL so we use Buffer.from in Node */\nfunction decodeBase64(base64: string): Uint8Array {\n  const binaryString = atob(base64);\n  const length = binaryString.length;\n  const uint8Array = new Uint8Array(length);\n\n  for (let i = 0; i < length; i++) {\n    uint8Array[i] = binaryString.charCodeAt(i);\n  }\n\n  return uint8Array;\n}\n\nclass RTAudioContent {\n  public type: \"audio\" = \"audio\";\n\n  public itemId: string;\n  public contentIndex: number;\n  private part: ResponseItemAudioContentPart;\n  private contentQueue: SharedEndQueue<ServerMessageType | null>;\n\n  private constructor(\n    message: ResponseContentPartAddedMessage,\n    private queue: MessageQueueWithError<ServerMessageType>,\n  ) {\n    this.itemId = message.item_id;\n    this.contentIndex = message.content_index;\n    if (message.part.type !== \"audio\") {\n      throw new Error(\"Unexpected part type\");\n    }\n    this.part = message.part;\n    this.contentQueue = new SharedEndQueue(\n      () => this.receiveContent(),\n      (m) => m !== null && m.type === \"error\",\n      (m) => m !== null && m.type === \"response.content_part.done\",\n    );\n  }\n\n  static create(\n    message: ResponseContentPartAddedMessage,\n    queue: MessageQueueWithError<ServerMessageType>,\n  ): RTAudioContent {\n    return new RTAudioContent(message, queue);\n  }\n\n  get transcript(): Optional<string> {\n    return this.part.transcript;\n  }\n\n  private receiveContent(): Promise<ServerMessageType | null> {\n    function isValidMessage(\n      m: ServerMessageType,\n    ): m is\n      | ResponseAudioDeltaMessage\n      | ResponseAudioDoneMessage\n      | ResponseAudioTranscriptDeltaMessage\n      | ResponseAudioTranscriptDoneMessage\n      | ResponseContentPartDoneMessage {\n      return [\n        \"response.audio.delta\",\n        \"response.audio.done\",\n        \"response.audio_transcript.delta\",\n        \"response.audio_transcript.done\",\n        \"response.content_part.done\",\n      ].includes(m.type);\n    }\n    return this.queue.receive(\n      (m) =>\n        isValidMessage(m) &&\n        m.item_id === this.itemId &&\n        m.content_index === this.contentIndex,\n    );\n  }\n\n  async *audioChunks(): AsyncIterable<Uint8Array> {\n    while (true) {\n      const message = await this.contentQueue.receive(\n        (m) =>\n          m !== null &&\n          [\"response.audio.delta\", \"response.audio.done\"].includes(m.type),\n      );\n      if (message === null) {\n        break;\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"response.content_part.done\") {\n        if (message.part.type !== \"audio\") {\n          throw new Error(\"Unexpected part type\");\n        }\n        this.part = message.part;\n        break;\n      } else if (message.type === \"response.audio.delta\") {\n        const buffer = decodeBase64(message.delta);\n        yield buffer;\n      } else if (message.type === \"response.audio.done\") {\n        // We are skipping this as it's information is already provided by 'response.content_part.done'\n        // and that is a better signal to end the iteration\n        continue;\n      }\n    }\n  }\n\n  async *transcriptChunks(): AsyncIterable<string> {\n    while (true) {\n      const message = await this.contentQueue.receive(\n        (m) =>\n          m !== null &&\n          [\n            \"response.audio_transcript.delta\",\n            \"response.audio_transcript.done\",\n          ].includes(m.type),\n      );\n      if (message === null) {\n        break;\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"response.content_part.done\") {\n        if (message.part.type !== \"audio\") {\n          throw new Error(\"Unexpected part type\");\n        }\n        this.part = message.part;\n        break;\n      } else if (message.type === \"response.audio_transcript.delta\") {\n        yield message.delta;\n      } else if (message.type === \"response.audio_transcript.done\") {\n        // We are skipping this as it's information is already provided by 'response.content_part.done'\n        // and that is a better signal to end the iteration\n        continue;\n      }\n    }\n  }\n}\n\nexport type { RTAudioContent };\n\nclass RTTextContent {\n  public type: \"text\" = \"text\";\n\n  public itemId: string;\n  public contentIndex: number;\n  private part: ResponseItemTextContentPart;\n\n  private constructor(\n    message: ResponseContentPartAddedMessage,\n    private queue: MessageQueueWithError<ServerMessageType>,\n  ) {\n    this.itemId = message.item_id;\n    this.contentIndex = message.content_index;\n    if (message.part.type !== \"text\") {\n      throw new Error(\"Unexpected part type\");\n    }\n    this.part = message.part;\n  }\n\n  static create(\n    message: ResponseContentPartAddedMessage,\n    queue: MessageQueueWithError<ServerMessageType>,\n  ) {\n    return new RTTextContent(message, queue);\n  }\n\n  get text(): string {\n    return this.part.text;\n  }\n\n  async *textChunks(): AsyncIterable<string> {\n    while (true) {\n      const message = await this.queue.receive(\n        (m) =>\n          (m.type === \"response.content_part.done\" ||\n            m.type === \"response.text.delta\" ||\n            m.type === \"response.text.done\") &&\n          m.item_id === this.itemId &&\n          m.content_index === this.contentIndex,\n      );\n      if (message === null) {\n        break;\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"response.content_part.done\") {\n        if (message.part.type !== \"text\") {\n          throw new Error(\"Unexpected part type\");\n        }\n        this.part = message.part;\n        break;\n      } else if (message.type === \"response.text.delta\") {\n        yield message.delta;\n      } else if (message.type === \"response.text.done\") {\n        // We are skipping this as it's information is already provided by 'response.content_part.done'\n        // and that is a better signal to end the iteration\n        continue;\n      }\n    }\n  }\n}\n\nexport type { RTTextContent };\n\nexport type RTMessageContent = RTAudioContent | RTTextContent;\n\nclass RTMessageItem implements AsyncIterable<RTMessageContent> {\n  public type: \"message\" = \"message\";\n\n  private constructor(\n    public responseId: string,\n    private item: ResponseMessageItem,\n    public previousItemId: Optional<string>,\n    private queue: MessageQueueWithError<ServerMessageType>,\n  ) {}\n\n  static create(\n    responseId: string,\n    item: ResponseMessageItem,\n    previousItemId: Optional<string>,\n    queue: MessageQueueWithError<ServerMessageType>,\n  ): RTMessageItem {\n    return new RTMessageItem(responseId, item, previousItemId, queue);\n  }\n\n  get id(): string {\n    return this.item.id!;\n  }\n\n  get role(): MessageRole {\n    return this.item.role;\n  }\n\n  get status(): ResponseItemStatus {\n    return this.item.status;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    while (true) {\n      const message = await this.queue.receive(\n        (m) =>\n          (m.type === \"response.content_part.added\" && m.item_id === this.id) ||\n          (m.type === \"response.output_item.done\" && m.item.id === this.id),\n      );\n      if (message === null) {\n        break;\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"response.output_item.done\") {\n        if (message.item.type === \"message\") {\n          this.item = message.item;\n        } else {\n          throw new Error(\"Unexpected item type\");\n        }\n        break;\n      } else if (message.type === \"response.content_part.added\") {\n        if (message.part.type === \"audio\") {\n          yield RTAudioContent.create(message, this.queue);\n        } else if (message.part.type === \"text\") {\n          yield RTTextContent.create(message, this.queue);\n        } else {\n          throw new Error(`Unexpected part type: ${message.part.type}`);\n        }\n      } else {\n        throw new Error(`Unexpected message type: ${message.type}`);\n      }\n    }\n  }\n}\n\nexport type { RTMessageItem };\n\nclass RTFunctionCallItem implements AsyncIterable<string> {\n  public type: \"function_call\" = \"function_call\";\n  private awaited: boolean = false;\n  private iterated: boolean = false;\n\n  private constructor(\n    public responseId: string,\n    private item: ResponseFunctionCallItem,\n    public previousItemId: Optional<string>,\n    private queue: MessageQueueWithError<ServerMessageType>,\n  ) {}\n\n  static create(\n    responseId: string,\n    item: ResponseFunctionCallItem,\n    previousItemId: Optional<string>,\n    queue: MessageQueueWithError<ServerMessageType>,\n  ): RTFunctionCallItem {\n    return new RTFunctionCallItem(responseId, item, previousItemId, queue);\n  }\n\n  get id(): string {\n    return this.item.id!;\n  }\n\n  get functionName(): string {\n    return this.item.name;\n  }\n\n  get callId(): string {\n    return this.item.call_id;\n  }\n\n  get arguments(): string {\n    return this.item.arguments;\n  }\n\n  private async *inner(): AsyncIterable<string> {\n    while (true) {\n      const message = await this.queue.receive(\n        (m) =>\n          ((m.type == \"response.function_call_arguments.delta\" ||\n            m.type == \"response.function_call_arguments.done\") &&\n            m.item_id === this.id) ||\n          (m.type === \"response.output_item.done\" && m.item.id === this.id),\n      );\n      if (message === null) {\n        break;\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"response.output_item.done\") {\n        if (message.item.type === \"function_call\") {\n          this.item = message.item;\n          break;\n        } else {\n          throw new Error(\"Unexpected item type\");\n        }\n      } else if (message.type === \"response.function_call_arguments.delta\") {\n        yield message.delta;\n      } else if (message.type === \"response.function_call_arguments.done\") {\n        continue;\n      } else {\n        throw new Error(`Unexpected message type: ${message.type}`);\n      }\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncIterator<string> {\n    if (this.awaited) {\n      throw new Error(\"Cannot iterate after awaiting.\");\n    }\n    this.iterated = true;\n    return this.inner();\n  }\n\n  async waitForCompletion(): Promise<void> {\n    if (this.iterated) {\n      throw new Error(\"Cannot await after iterating.\");\n    }\n    this.awaited = true;\n    for await (const _ of this.inner()) {\n      // consume the remaining items\n    }\n  }\n}\n\nexport type { RTFunctionCallItem };\n\ntype RTOutputItem = RTMessageItem | RTFunctionCallItem;\n\nexport function isMessageItem(item: RTOutputItem): item is RTMessageItem {\n  return item.type === \"message\";\n}\n\nexport function isFunctionCallItem(\n  item: RTOutputItem,\n): item is RTFunctionCallItem {\n  return item.type === \"function_call\";\n}\n\nclass RTResponse implements AsyncIterable<RTOutputItem> {\n  public type: \"response\" = \"response\";\n  private done: boolean = false;\n\n  private constructor(\n    private response: Response,\n    private queue: MessageQueueWithError<ServerMessageType>,\n    private client: LowLevelRTClient,\n  ) {}\n\n  static create(\n    response: Response,\n    queue: MessageQueueWithError<ServerMessageType>,\n    client: LowLevelRTClient,\n  ): RTResponse {\n    return new RTResponse(response, queue, client);\n  }\n\n  get id(): string {\n    return this.response.id;\n  }\n\n  get status(): ResponseStatus {\n    return this.response.status;\n  }\n\n  get statusDetails(): Optional<ResponseStatusDetails> {\n    return this.response.status_details;\n  }\n\n  get output(): ResponseItem[] {\n    return this.response.output;\n  }\n\n  get usage(): Optional<Usage> {\n    return this.response.usage;\n  }\n\n  async cancel(): Promise<void> {\n    await this.client.send({\n      type: \"response.cancel\",\n    });\n    for await (const _ of this) {\n    }\n    // consume the remaining items\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<RTOutputItem> {\n    return {\n      next: async (): Promise<IteratorResult<RTOutputItem>> => {\n        if (this.done) {\n          return { value: undefined, done: true };\n        }\n        const message = await this.queue.receive(\n          (m) =>\n            (m.type === \"response.done\" && m.response.id === this.id) ||\n            (m.type === \"response.output_item.added\" &&\n              m.response_id === this.id),\n        );\n        if (message === null) {\n          return { value: undefined, done: true };\n        } else if (message.type === \"error\") {\n          throw new RTError(message.error);\n        } else if (message.type === \"response.done\") {\n          this.done = true;\n          this.response = message.response;\n          return { value: undefined, done: true };\n        } else if (message.type === \"response.output_item.added\") {\n          const created_message = await this.queue.receive(\n            (m) =>\n              m.type === \"conversation.item.created\" &&\n              m.item.id === message.item.id,\n          );\n          if (created_message === null) {\n            return { value: undefined, done: true };\n          } else if (created_message.type === \"error\") {\n            throw new RTError(created_message.error);\n          } else if (created_message.type === \"conversation.item.created\") {\n            if (created_message.item.type === \"message\") {\n              const messageItem = RTMessageItem.create(\n                this.id,\n                created_message.item,\n                created_message.previous_item_id,\n                this.queue,\n              );\n              return { value: messageItem, done: false };\n            } else if (created_message.item.type === \"function_call\") {\n              const functionCallItem = RTFunctionCallItem.create(\n                this.id,\n                created_message.item,\n                created_message.previous_item_id,\n                this.queue,\n              );\n              return { value: functionCallItem, done: false };\n            } else {\n              throw new Error(\n                `Unexpected item type (${created_message.item.type}.`,\n              );\n            }\n          } else {\n            throw new Error(`Unexpected message type: ${created_message.type}`);\n          }\n        } else {\n          throw new Error(`Unexpected message type: ${message.type}`);\n        }\n      },\n    };\n  }\n}\n\nexport type { RTResponse };\n\nexport class RTClient {\n  private client: LowLevelRTClient;\n  private messageQueue: MessageQueueWithError<ServerMessageType>;\n  private messagesIterable: AsyncIterator<ServerMessageType>;\n  public session: Session | undefined;\n\n  private initPromise: Promise<void> | undefined;\n  private iterating: boolean = false;\n\n  constructor(credential: KeyCredential, options: RTOpenAIOptions);\n  constructor(\n    uri: URL,\n    credential: KeyCredential | TokenCredential,\n    options: RTAzureOpenAIOptions,\n  );\n  constructor(\n    uriOrCredential: URL | KeyCredential,\n    credentialOrOptions: KeyCredential | TokenCredential | RTOpenAIOptions,\n    options?: RTAzureOpenAIOptions,\n  ) {\n    this.client = (() => {\n      if (isKeyCredential(uriOrCredential)) {\n        return new LowLevelRTClient(\n          uriOrCredential,\n          credentialOrOptions as RTOpenAIOptions,\n        );\n      } else {\n        return new LowLevelRTClient(\n          uriOrCredential as URL,\n          credentialOrOptions as KeyCredential | TokenCredential,\n          options as RTAzureOpenAIOptions,\n        );\n      }\n    })();\n    this.messagesIterable = this.client.messages()[Symbol.asyncIterator]();\n    this.messageQueue = new MessageQueueWithError<ServerMessageType>(\n      () => this.receiveMessages(),\n      (m) => m.type === \"error\",\n    );\n  }\n\n  private async receiveMessages(): Promise<ServerMessageType | null> {\n    const result = await this.messagesIterable.next();\n    return result.done ? null : result.value;\n  }\n\n  get requestId(): string | undefined {\n    return this.client.requestId;\n  }\n\n  init(): Promise<void> {\n    if (this.initPromise !== undefined) {\n      return this.initPromise;\n    }\n    this.initPromise = (async () => {\n      if (this.session !== undefined) {\n        return;\n      }\n      const message = await this.messageQueue.receive(\n        (m) => m.type === \"session.created\",\n      );\n      if (message === null) {\n        throw new Error(\"Failed to initialize session\");\n      }\n      if (message.type === \"error\") {\n        throw new RTError(message.error);\n      }\n      if (message.type !== \"session.created\") {\n        throw new Error(\"Unexpected message type\");\n      }\n      this.session = message.session;\n    })();\n    return this.initPromise;\n  }\n\n  async configure(params: SessionUpdateParams): Promise<Session> {\n    await this.init();\n    await this.client.send({\n      type: \"session.update\",\n      session: params,\n    });\n    const message = await this.messageQueue.receive(\n      (m) => m.type === \"session.updated\",\n    );\n    if (message === null) {\n      throw new Error(\"Failed to update session\");\n    }\n    if (message.type === \"error\") {\n      throw new RTError(message.error);\n    }\n    if (message.type !== \"session.updated\") {\n      throw new Error(\"Unexpected message type\");\n    }\n    this.session = message.session;\n    return this.session;\n  }\n\n  async sendAudio(audio: Uint8Array): Promise<void> {\n    await this.init();\n    const base64 = btoa(String.fromCharCode(...audio));\n    await this.client.send({\n      type: \"input_audio_buffer.append\",\n      audio: base64,\n    });\n  }\n\n  async commitAudio(): Promise<RTInputAudioItem> {\n    await this.init();\n    await this.client.send({ type: \"input_audio_buffer.commit\" });\n    const message = await this.messageQueue.receive(\n      (m) => m.type === \"input_audio_buffer.committed\",\n    );\n    if (message === null) {\n      throw new Error(\"Failed to commit audio\");\n    } else if (message.type === \"error\") {\n      throw new RTError(message.error);\n    } else if (message.type === \"input_audio_buffer.committed\") {\n      return RTInputAudioItem.create(\n        message.item_id,\n        undefined,\n        this.session?.input_audio_transcription !== undefined &&\n          this.session?.input_audio_transcription !== null,\n        this.messageQueue,\n      );\n    } else {\n      throw new Error(\"Unexpected message type\");\n    }\n  }\n\n  async clearAudio(): Promise<void> {\n    await this.init();\n    await this.client.send({ type: \"input_audio_buffer.clear\" });\n    const message = await this.messageQueue.receive(\n      (m) => m.type === \"input_audio_buffer.cleared\",\n    );\n    if (message === null) {\n      throw new Error(\"Failed to clear audio\");\n    } else if (message.type === \"error\") {\n      throw new RTError(message.error);\n    } else if (message.type !== \"input_audio_buffer.cleared\") {\n      throw new Error(\"Unexpected message type\");\n    }\n  }\n\n  async sendItem(item: Item, previousItemId?: string): Promise<ResponseItem> {\n    await this.init();\n    item.id = item.id || generateId(\"item\", 32);\n    await this.client.send({\n      type: \"conversation.item.create\",\n      previous_item_id: previousItemId,\n      item,\n    });\n    const message = await this.messageQueue.receive(\n      (m) => m.type === \"conversation.item.created\" && m.item.id === item.id,\n    );\n    if (message === null) {\n      throw new Error(\"Failed to create item\");\n    } else if (message.type === \"error\") {\n      throw new RTError(message.error);\n    } else if (message.type === \"conversation.item.created\") {\n      return message.item;\n    } else {\n      throw new Error(\"Unexpected message type\");\n    }\n  }\n\n  async removeItem(itemId: string): Promise<void> {\n    await this.init();\n    await this.client.send({\n      type: \"conversation.item.delete\",\n      item_id: itemId,\n    });\n    const message = await this.messageQueue.receive(\n      (m) => m.type === \"conversation.item.deleted\" && m.item_id === itemId,\n    );\n    if (message === null) {\n      throw new Error(\"Failed to delete item\");\n    } else if (message.type === \"error\") {\n      throw new RTError(message.error);\n    } else if (message.type === \"conversation.item.deleted\") {\n      return;\n    } else {\n      throw new Error(\"Unexpected message type\");\n    }\n  }\n\n  async generateResponse(): Promise<RTResponse | undefined> {\n    await this.init();\n    await this.client.send({ type: \"response.create\" });\n    if (!this.iterating) {\n      const message = await this.messageQueue.receive(\n        (m) => m.type === \"response.created\",\n      );\n      if (message === null) {\n        throw new Error(\"Failed to create response\");\n      } else if (message.type === \"error\") {\n        throw new RTError(message.error);\n      } else if (message.type === \"response.created\") {\n        return RTResponse.create(\n          message.response,\n          this.messageQueue,\n          this.client,\n        );\n      }\n      throw new Error(\"Unexpected message type\");\n    }\n    return undefined;\n  }\n\n  async *events(): AsyncIterable<RTInputAudioItem | RTResponse> {\n    // TODO: Add the updated quota message as a control type of event.\n    try {\n      this.iterating = true;\n      while (true) {\n        const message = await this.messageQueue.receive(\n          (m) =>\n            m.type === \"input_audio_buffer.speech_started\" ||\n            m.type === \"response.created\",\n        );\n        if (message === null) {\n          break;\n        } else if (message.type === \"error\") {\n          throw new RTError(message.error);\n        } else if (message.type === \"input_audio_buffer.speech_started\") {\n          yield RTInputAudioItem.create(\n            message.item_id,\n            message.audio_start_ms,\n            this.session?.input_audio_transcription !== undefined &&\n              this.session?.input_audio_transcription !== null,\n            this.messageQueue,\n          );\n        } else if (message.type === \"response.created\") {\n          yield RTResponse.create(\n            message.response,\n            this.messageQueue,\n            this.client,\n          );\n        } else {\n          throw new Error(\"Unexpected message type\");\n        }\n      }\n    } finally {\n      this.iterating = false;\n    }\n  }\n\n  async close(): Promise<void> {\n    await this.client.close();\n  }\n}\n"],
  "mappings": ";AAwEO,IAAM,kBAAkB;ACxD/B,IAAI,gBAAgB,SAAS,GAAG,GAAG;AAC/B,kBAAgB,OAAO,kBAClB,EAAE,WAAW,CAAA,EAAE,aAAc,SAAS,SAAUA,IAAGC,IAAG;AAAE,IAAAD,GAAE,YAAYC;EAAE,KACzE,SAAUD,IAAGC,IAAG;AAAE,aAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;EAAE;AACnG,SAAO,cAAc,GAAG,CAAC;AAC7B;AAEO,SAAS,UAAU,GAAG,GAAG;AAC5B,MAAI,OAAO,MAAM,cAAc,MAAM;AACjC,UAAM,IAAI,UAAU,yBAAyB,OAAO,CAAC,IAAI,+BAA+B;AAC5F,gBAAc,GAAG,CAAC;AAClB,WAAS,KAAK;AAAE,SAAK,cAAc;EAAE;AACrC,IAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAE;AACrF;AAqFO,SAAS,UAAU,SAAS,YAAY,GAAG,WAAW;AACzD,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;IAAE,CAAE;EAAE;AAC1G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;MAAE,SAAU,GAAG;AAAE,eAAO,CAAC;MAAE;IAAE;AACzF,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;MAAE,SAAU,GAAG;AAAE,eAAO,CAAC;MAAE;IAAE;AAC5F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;IAAE;AAC5G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAA,CAAE,GAAG,KAAI,CAAE;EAC5E,CAAK;AACL;AAEO,SAAS,YAAY,SAAS,MAAM;AACvC,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI,EAAG,OAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;EAAE,GAAI,MAAM,CAAA,GAAI,KAAK,CAAA,EAAE,GAAI,GAAG,GAAG,GAAG,IAAI,OAAO,QAAQ,OAAO,aAAa,aAAa,WAAW,QAAQ,SAAS;AAC/L,SAAO,EAAE,OAAO,KAAK,CAAC,GAAG,EAAE,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,QAAQ,IAAI,KAAK,CAAC,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;EAAK,IAAK;AAC1J,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;IAAE;EAAG;AAChE,WAAS,KAAK,IAAI;AACd,QAAI,EAAG,OAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,EAAG,KAAI;AAC1C,UAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,KAAM,QAAO;AAC3J,UAAI,IAAI,GAAG,EAAG,MAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,cAAQ,GAAG,CAAC,GAAC;QACT,KAAK;QAAG,KAAK;AAAG,cAAI;AAAI;QACxB,KAAK;AAAG,YAAE;AAAS,iBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAK;QACrD,KAAK;AAAG,YAAE;AAAS,cAAI,GAAG,CAAC;AAAG,eAAK,CAAC,CAAC;AAAG;QACxC,KAAK;AAAG,eAAK,EAAE,IAAI,IAAG;AAAI,YAAE,KAAK,IAAG;AAAI;QACxC;AACI,cAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,gBAAI;AAAG;UAAS;AAC1G,cAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,cAAE,QAAQ,GAAG,CAAC;AAAG;UAAM;AACpF,cAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,gBAAI;AAAI;UAAM;AACnE,cAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,cAAE,IAAI,KAAK,EAAE;AAAG;UAAM;AACjE,cAAI,EAAE,CAAC,EAAG,GAAE,IAAI,IAAG;AACnB,YAAE,KAAK,IAAG;AAAI;MAClC;AACY,WAAK,KAAK,KAAK,SAAS,CAAC;IACrC,SAAiB,GAAG;AAAE,WAAK,CAAC,GAAG,CAAC;AAAG,UAAI;IAAE,UAAE;AAAW,UAAI,IAAI;IAAE;AACxD,QAAI,GAAG,CAAC,IAAI,EAAG,OAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAI;EACtF;AACA;AAkBO,SAAS,SAAS,GAAG;AACxB,MAAI,IAAI,OAAO,WAAW,cAAc,OAAO,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI;AAC5E,MAAI,EAAG,QAAO,EAAE,KAAK,CAAC;AACtB,MAAI,KAAK,OAAO,EAAE,WAAW,SAAU,QAAO;IAC1C,MAAM,WAAY;AACd,UAAI,KAAK,KAAK,EAAE,OAAQ,KAAI;AAC5B,aAAO,EAAE,OAAO,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,EAAC;IACjD;EACA;AACI,QAAM,IAAI,UAAU,IAAI,4BAA4B,iCAAiC;AACzF;AAEO,SAAS,OAAO,GAAG,GAAG;AACzB,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAA,GAAI;AAC/B,MAAI;AACA,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAI,GAAI,KAAM,IAAG,KAAK,EAAE,KAAK;EACjF,SACW,OAAO;AAAE,QAAI,EAAE,MAAY;EAAG,UACzC;AACQ,QAAI;AACA,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;IAC3D,UACA;AAAkB,UAAI,EAAG,OAAM,EAAE;IAAM;EACvC;AACI,SAAO;AACX;AAkBO,SAAS,cAAc,IAAI,MAAM,MAAM;AAC1C,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACjF,QAAI,MAAM,EAAE,KAAK,OAAO;AACpB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;IAC1B;EACA;AACI,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AAC3D;AAEO,SAAS,QAAQ,GAAG;AACvB,SAAO,gBAAgB,WAAW,KAAK,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC;AACvE;AAEO,SAAS,iBAAiB,SAAS,YAAY,WAAW;AAC7D,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,UAAU,MAAM,SAAS,cAAc,CAAA,CAAE,GAAG,GAAG,IAAI,CAAA;AAC3D,SAAO,IAAI,OAAO,QAAQ,OAAO,kBAAkB,aAAa,gBAAgB,QAAQ,SAAS,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,UAAU,WAAW,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;EAAK,GAAI;AACtN,WAAS,YAAY,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,QAAQ,QAAQ,CAAC,EAAE,KAAK,GAAG,MAAM;IAAE;EAAG;AAC7F,WAAS,KAAK,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG;AAAE,QAAE,CAAC,IAAI,SAAU,GAAG;AAAE,eAAO,IAAI,QAAQ,SAAU,GAAG,GAAG;AAAE,YAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,GAAG,CAAC;QAAE,CAAE;MAAE;AAAI,UAAI,EAAG,GAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAAE;EAAE;AACtK,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI;AAAE,WAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE,SAAU,GAAG;AAAE,aAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;IAAE;EAAE;AAChF,WAAS,KAAK,GAAG;AAAE,MAAE,iBAAiB,UAAU,QAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;EAAE;AACtH,WAAS,QAAQ,OAAO;AAAE,WAAO,QAAQ,KAAK;EAAE;AAChD,WAAS,OAAO,OAAO;AAAE,WAAO,SAAS,KAAK;EAAE;AAChD,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG,EAAE,MAAK,GAAI,EAAE,OAAQ,QAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EAAE;AACpF;AAQO,SAAS,cAAc,GAAG;AAC7B,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,EAAE,OAAO,aAAa,GAAG;AACjC,SAAO,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,OAAO,aAAa,aAAa,SAAS,CAAC,IAAI,EAAE,OAAO,QAAQ,EAAC,GAAI,IAAI,CAAA,GAAI,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;EAAK,GAAI;AAC9M,WAAS,KAAK,GAAG;AAAE,MAAE,CAAC,IAAI,EAAE,CAAC,KAAK,SAAU,GAAG;AAAE,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAAE,YAAI,EAAE,CAAC,EAAE,CAAC,GAAG,OAAO,SAAS,QAAQ,EAAE,MAAM,EAAE,KAAK;MAAE,CAAE;IAAE;EAAG;AAC9J,WAAS,OAAO,SAAS,QAAQ,GAAG,GAAG;AAAE,YAAQ,QAAQ,CAAC,EAAE,KAAK,SAASC,IAAG;AAAE,cAAQ,EAAE,OAAOA,IAAG,MAAM,EAAC,CAAE;IAAE,GAAI,MAAM;EAAE;AAC9H;ACvPA,IAAM,kBAAkB,SAAC,SAAgB;AACvC,SAAA,OAAO,YAAY,YAAY,YAAY,QAAQ,UAAU;AAA7D;AAEK,IAAM,sBAAsB,SACjC,SAAgB;AAEhB,SAAA,gBAAgB,OAAO,KACvB;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,EAAC,SAAS,QAAQ,IAAI;AA7BvB;ACMK,IAAM,cAAc,SACzB,QACA,SAAmD;AAEnD,MAAI,OAAO,eAAe,UAAU,MAAM;AACxC,WAAO,QAAQ,OAAO,IAAI,MAAM,oBAAoB,CAAC;;AAEvD,SAAO,KAAK,OAAO;AACnB,SAAO,QAAQ,QAAO;AACxB;AAEM,SAAgB,aACpB,UAA4B;;;;;AAExB,cAAA,EAAA,SAAS,UAAU,QAAnB,QAA4B,CAAA,GAAA,CAAA;AACnB,iBAAA,CAAA,GAAM,SAAS,OAAO,QAAQ,CAAC;;AAA1C,qBAAW,GAAA,KAAA;;;AAEb,cAAI,SAAS,WAAW,QAAW;AACjC,kBAAM,IAAI,MAAM,0CAA0C;;AAE5D,iBAAO,CAAA,GAAA,IAAI,UAAU,SAAS,KAAK,SAAS,SAAS,CAAC;;;;AACvD;AClBM,IAAM,oBAAoB,SAAI,SAAU;AAAyB,SAAC;IACvE,SAAS;IACT;;AACA;AACK,IAAM,kBAAkB,SAAI,OAAY;AAAyB,SAAC;IACvE,SAAS;IACT;;AACA;AACF,IAAM,qBAAqB,SACzB,QAA0B;AACkB,SAAA,OAAO;AAAP;AAc9C,IAAA;;EAAA,WAAA;AAYE,aACEC,iBAAA,UACA,SAAqC;AAFvC,UAqBC,QAAA;AA9BO,WAAa,gBAA8B;AAE3C,WAAY,eAAQ,CAAA;AAIpB,WAAa,gBAAsC,CAAA;AACnD,WAAI,OAAY;AAMtB,WAAK,WAAW,QAAQ;AACxB,WAAK,YAAY,QAAQ;AACzB,WAAK,mBAAmB,IAAI,QAAQ,SAAO,SAAS,QAAM;AAAA,eAAA,UAAA,OAAA,QAAA,QAAA,WAAA;;;;;;AACxD,qBAAA;AAAc,uBAAA,CAAA,GAAM,aAAa,QAAQ,CAAC;;AAA1C,mBAAK,SAAS,GAAA,KAAA;AACd,qBAAK,OAAO,SAAS,WAAA;AACnB,kBAAAC,OAAK,OAAO,YAAYA,OAAK,kBAAiB;AAC9C,kBAAAA,OAAK,gBAAgB,IAAI,QAAQ,SAACC,UAAO;AACvC,oBAAAD,OAAK,OAAO,UAAUA,OAAK,iBAAiBC,QAAO;kBACrD,CAAC;AACD,kBAAAD,OAAK,OAAO,UAAUA,OAAK;AAC3B,0BAAO;gBACT;AACA,qBAAK,OAAO,UAAU,SAAC,OAAiB;AACtC,kBAAAA,OAAK,QAAQ,MAAM;AACnB,yBAAO,KAAK;gBACd;;;;;;;QACD,CAAA;MAAA,CAAA;;AAGK,IAAAD,iBAAW,UAAA,cAAnB,SAAoB,OAAiB;AACnC,WAAK,QAAQ,MAAM;AACnB,aAAO,KAAK,cAAc,SAAS,GAAG;AAC9B,YAAA,KAAA,OAAc,KAAK,cAAc,MAAK,GAAG,CAAA;AAAvC,WAAA,CAAA;AAAE,YAAA,SAAM,GAAA,CAAA;AAChB,eAAO,MAAM,KAAK;;;AAId,IAAAA,iBAAgB,UAAA,mBAAxB,SACE,cAA+B;AADjC,UAeC,QAAA;AAZC,aAAO,SAAC,GAAa;AACnB,cAAK,OAAO;AACZ,eAAO,MAAK,cAAc,SAAS,GAAG;AAC9B,cAAA,KAAA,OAAoB,MAAK,cAAc,MAAK,GAAG,CAAA,GAA9C,UAAO,GAAA,CAAA,GAAE,SAAM,GAAA,CAAA;AACtB,cAAI,MAAK,OAAO;AACd,mBAAO,MAAK,KAAK;iBACZ;AACL,oBAAQ,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;;;AAG5C,qBAAY;MACd;;AAGM,IAAAA,iBAAA,UAAA,oBAAR,WAAA;AACE,UAAM,OAAO;AACb,aAAO,SAAC,OAAmB;AACzB,YAAM,SAAS,KAAK,SAAS,KAAK;AAClC,YAAI,mBAAmB,MAAM,GAAG;AACtB,cAAA,UAAY,OAAM;AAC1B,cAAI,KAAK,cAAc,SAAS,GAAG;AAC3B,gBAAA,KAAA,OAAe,KAAK,cAAc,MAAK,GAAG,CAAA,GAAzC,UAAO,GAAA,CAAA;AAAE,eAAA,CAAA;AAChB,oBAAQ,EAAE,OAAO,SAAS,MAAM,MAAK,CAAE;iBAClC;AACL,iBAAK,aAAa,KAAK,OAAO;;eAE3B;AACL,eAAK,QAAQ,OAAO;AACpB,eAAK,OAAO,MAAM,KAAM,6BAA6B;;MAEzD;;AAGF,IAAAA,iBAAA,UAAC,OAAO,aAAa,IAArB,WAAA;AAAA,UAiBC,QAAA;AAhBC,aAAO;QACL,MAAM,WAAA;AACJ,cAAI,MAAK,OAAO;AACd,mBAAO,QAAQ,OAAO,MAAK,KAAK;qBACvB,MAAK,MAAM;AACpB,mBAAO,QAAQ,QAAQ,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;qBAC9C,MAAK,aAAa,SAAS,GAAG;AACvC,gBAAM,UAAU,MAAK,aAAa,MAAK;AACvC,mBAAO,QAAQ,QAAQ,EAAE,OAAO,SAAS,MAAM,MAAK,CAAE;iBACjD;AACL,mBAAO,IAAI,QAAQ,SAAC,SAAS,QAAM;AACjC,oBAAK,cAAc,KAAK,CAAC,SAAS,MAAM,CAAC;YAC3C,CAAC;;;;;AAMH,IAAAA,iBAAI,UAAA,OAAV,SAAW,SAAU;;;;;;AACnB,qBAAM,CAAA,GAAA,KAAK,gBAAgB;;AAA3B,iBAAA,KAAA;AACA,kBAAI,KAAK,OAAO;AACd,sBAAM,KAAK;;AAEP,2BAAa,KAAK,UAAU,OAAO;AACzC,qBAAO,CAAA,GAAA,YAAY,KAAK,QAAQ,UAAU,CAAC;;;;IAC5C;AAEK,IAAAA,iBAAA,UAAA,QAAN,WAAA;;;;;AACE,qBAAM,CAAA,GAAA,KAAK,gBAAgB;;AAA3B,iBAAA,KAAA;AACA,kBAAI,KAAK,MAAM;AACb,uBAAO;kBAAA;;gBAAA;;AAET,mBAAK,OAAO,MAAK;AACjB,qBAAM,CAAA,GAAA,KAAK,aAAa;;AAAxB,iBAAA,KAAA;;;;;;;;IACD;AACH,WAACA;EAAD,EAAC;;AC9IK,SAAU,gBACd,YAAmB;AAEnB,SACE,OAAO,eAAe,YACtB,eAAe,QACf,SAAS,cACT,OAAQ,WAA6B,QAAQ;AAEjD;AAEM,SAAU,kBACd,YAAmB;AAEnB,SACE,OAAO,eAAe,YACtB,eAAe,QACf,cAAc,cACd,OAAQ,WAA+B,aAAa;AAExD;AAEO,IAAM,eAAe,SAC1B,YAAmB;AAEnB,SAAA,gBAAgB,UAAU,KAAK,kBAAkB,UAAU;AAA3D;AClBK,IAAM,oBAAoB,SAC/B,SAAgB;AAEhB,SACE,OAAO,YAAY,YACnB,YAAY,QACZ,WAAW,WACX,OAAQ,QAA4B,UAAU;AAElD;AAEO,IAAM,yBAAyB,SACpC,SAAgB;AAEhB,SACE,OAAO,YAAY,YACnB,YAAY,QACZ,gBAAgB,WAChB,OAAQ,QAAiC,eAAe;AAE5D;AClCA,SAAS,eAAY;AACnB,MAAI,OAAO,WAAW,eAAe,OAAO,YAAY;AACtD,WAAO,OAAO,WAAU;aAExB,OAAO,WAAW,eAClB,OAAO,UACP,OAAO,OAAO,iBACd;AACA,QAAM,QAAQ,IAAI,WAAW,EAAE;AAC/B,WAAO,OAAO,gBAAgB,KAAK;AACnC,UAAM,CAAC,IAAK,MAAM,CAAC,IAAI,KAAQ;AAC/B,UAAM,CAAC,IAAK,MAAM,CAAC,IAAI,KAAQ;AAC/B,WAAO,cAAA,CAAA,GAAA,OAAI,KAAK,GACb,KAAA,EAAA,IACC,SAAC,GAAG,GAAC;AACH,cAAC,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MACnD,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;IAD9B,CAC+B,EAElC,KAAK,EAAE;SACL;AACL,UAAM,IAAI,MAAM,0BAA0B;;AAE9C;AAEgB,SAAA,eACd,YACA,SAAwB;AAExB,MAAM,MAAM,IAAI,IAAI,kCAAkC;AACtD,MAAI,aAAa,IAAI,SAAS,QAAQ,KAAK;AAC3C,SAAO;IACL;IACA,WAAW;MACT;MACA,2BAA2B,OAAA,WAAW,GAAG;MACzC;IACD;;AAEL;SAEgB,oBACd,KACA,YACA,SAA6B;AAH/B,MA2BC,QAAA;;AAtBC,MAAM,aAAY,KAAA,QAAQ,eAAS,QAAA,OAAA,SAAA,KAAI,aAAY;AAEnD,MAAM,SAAS,CAAC,8CAA8C;AAE9D,MAAI,aAAa,IAAI,eAAe,oBAAoB;AACxD,MAAI,aAAa,IAAI,0BAA0B,SAAU;AACzD,MAAI,aAAa,IAAI,cAAc,QAAQ,UAAU;AACrD,MAAI,WAAW;AACf,SAAO;IACL;IACA,SAAS;IACT,QAAQ,SAAO,UAAQ;AAAA,aAAA,UAAA,OAAA,QAAA,QAAA,WAAA;;;;;AACjB,kBAAA,CAAA,gBAAgB,UAAU,EAA1B,QAA2B,CAAA,GAAA,CAAA;AAC7B,uBAAS,IAAI,aAAa,IAAI,WAAW,WAAW,GAAG;;YAEzC,KAAA;AAAA,qBAAA,CAAA,GAAM,WAAW,SAAS,MAAM,CAAC;;AAAzC,sBAAQG,IAAiC,KAAA;AAC/C,uBAAS,IAAI,aAAa,IAAI,iBAAiB,UAAA,OAAU,MAAM,KAAK,CAAE;;YAExE,KAAA;AAAA,qBAAA,CAAA,GAAO,QAAQ;;;MAChB,CAAA;IAAA;IACD;;AAEJ;ACnEA,IAAA;;EAAA,WAAA;AAUE,aAAAC,cAAoB,iBAAmC;AAAnC,WAAe,kBAAf;AATZ,WAAQ,WAAQ,CAAA;AACd,WAAgB,mBAIpB,CAAA;AACE,WAAS,YAAY;AACrB,WAAW,cAAyB;;AAIlC,IAAAA,cAAQ,UAAA,WAAlB,SAAmB,SAAU;AAC3B,WAAK,SAAS,KAAK,OAAO;;AAGpB,IAAAA,cAAa,UAAA,gBAArB,SAAsB,WAAuB;AAC3C,UAAM,QAAQ,KAAK,SAAS,UAAU,SAAS;AAC/C,UAAI,UAAU,IAAI;AAChB,eAAO;;AAET,aAAO,KAAK,SAAS,OAAO,OAAO,CAAC,EAAE,CAAC;;AAG3B,IAAAA,cAAA,UAAA,cAAd,WAAA;;;AACE,cAAI,KAAK,WAAW;AAClB,mBAAO;cAAA;;YAAA;;AAGT,eAAK,YAAY;AACjB,eAAK,cAAc,KAAK,cAAa;AACrC,iBAAO,CAAA,GAAA,KAAK,WAAW;;;IACxB;AAEa,IAAAA,cAAA,UAAA,gBAAd,WAAA;;;;;;;;;AAEW,kBAAA,CAAA,KAAK,UAAS,QAAA,CAAA,GAAA,CAAA;AACH,qBAAA,CAAA,GAAM,KAAK,gBAAe,CAAE;;AAAtC,wBAAU,GAA4B,KAAA;AAC5C,kBAAI,YAAY,MAAM;AACpB,qBAAK,kBAAiB;AACtB,uBAAM,CAAA,GAAA,CAAA;;AAER,mBAAK,eAAe,OAAO;AAC3B,kBAAI,KAAK,iBAAiB,WAAW,GAAG;AACtC,uBAAM,CAAA,GAAA,CAAA;;;;;;;AAIV,mBAAK,YAAY,OAAK;;;AAEtB,mBAAK,YAAY;AACjB,mBAAK,cAAc;;;;;;;;;;;;;IAEtB;AAEO,IAAAA,cAAW,UAAA,cAAnB,SAAoB,OAAY;AAC9B,aAAO,KAAK,iBAAiB,SAAS,GAAG;AACjC,YAAA,KAAA,OACJ,KAAK,iBAAiB,MAAK,GAAG,CAAA;AADf,WAAA,CAAA;AAAA,YAAE,KAAA,OAAA,GAAA,CAAA,GAAA,CAAA;AAAS,WAAA,CAAA;AAAA,YAAE,SAAM,GAAA,CAAA;AAAc,WAAA,CAAA;AAElD,eAAO,KAAK;;;AAIR,IAAAA,cAAA,UAAA,oBAAR,WAAA;AACE,aAAO,KAAK,iBAAiB,SAAS,GAAG;AACjC,YAAA,KAAA,OACJ,KAAK,iBAAiB,MAAK,GAAG,CAAA;AADf,WAAA,CAAA;AAAA,YAAE,KAAA,OAAA,GAAA,CAAA,GAAA,CAAA,GAAC,UAAO,GAAA,CAAA;AAAS,WAAA,CAAA;AAAc,WAAA,CAAA;AAElD,gBAAQ,IAAI;;;AAIN,IAAAA,cAAc,UAAA,iBAAxB,SAAyB,SAAU;AACjC,UAAM,QAAQ,KAAK,iBAAiB,UAClC,SAACD,KAA6C;AAA7C,YAAAE,MAAA,OAA6CF,KAAA,CAAA,GAA5C,YAASE,IAAA,CAAA,GAAE,KAAA,OAAAA,IAAA,CAAA,GAAA,CAAA;AAAC,WAAA,CAAA;AAAiB,WAAA,CAAA;AAAc,QAAAA,IAAA,CAAA;AAAM,eAAA,UAAU,OAAO;MAAjB,CAAkB;AAEvE,UAAI,UAAU,IAAI;AAChB,aAAK,SAAS,OAAO;AACrB;;AAGI,UAAA,KAAA,OACJ,KAAK,iBAAiB,OAAO,OAAO,CAAC,EAAE,CAAC,GAAC,CAAA;AAD1B,SAAA,CAAA;AAAE,UAAA,KAAA,OAAA,GAAA,CAAA,GAAA,CAAA,GAAC,UAAO,GAAA,CAAA;AAAS,SAAA,CAAA;AAAG,SAAA,CAAA;AAEvC,cAAQ,OAAO;;AAGjB,IAAAD,cAAA,UAAA,qBAAA,WAAA;AACE,aAAO,KAAK,SAAS;;AAGvB,IAAAA,cAAA,UAAA,UAAA,SAAQ,WAAyB,OAAuB;AAAxD,UAeC,QAAA;AAdC,UAAM,eAAe,KAAK,cAAc,SAAS;AACjD,UAAI,iBAAiB,MAAM;AACzB,eAAO,QAAQ,QAAQ,YAAY;;AAGrC,aAAO,IAAI,QAAkB,SAAO,SAAS,QAAM;AAAA,eAAA,UAAA,OAAA,QAAA,QAAA,WAAA;;;;AACjD,qBAAK,iBAAiB,KAAK;kBACzB;kBACA,CAAC,SAAS,MAAM;kBAChB,SAAS,IAAI,gBAAe;gBAC7B,CAAA;AAED,uBAAA,CAAA,GAAM,KAAK,YAAW,CAAE;;AAAxB,mBAAA,KAAA;;;;;;;QACD,CAAA;MAAA,CAAA;;AAEL,WAACA;EAAD,EAAC;;AACD,IAAA;;EAAA,SAAA,QAAA;AAA8C,cAAeE,wBAAA,MAAA;AAG3D,aACEA,uBAAA,iBACQ,gBAAuC;AAE/C,UAAA,QAAA,OAAK,KAAA,MAAC,eAAe,KAAE;AAFf,YAAc,iBAAd;AAJF,YAAK,QAAO;;;AASZ,IAAAA,uBAAkB,UAAA,qBAA1B,SAA2B,SAAU;AACnC,aAAO,KAAK,iBAAiB,SAAS,GAAG;AACjC,YAAA,KAAA,OAA0B,KAAK,iBAAiB,MAAK,GAAG,CAAA;AAAtD,WAAA,CAAA;AAAA,YAAE,KAAA,OAAkB,GAAA,CAAA,GAAA,CAAA,GAAjB,UAAO,GAAA,CAAA;AAAS,WAAA,CAAA;AAC3B,gBAAQ,OAAO;;;AAIT,IAAAA,uBAAc,UAAA,iBAAxB,SAAyB,SAAU;AACjC,UAAI,KAAK,eAAe,OAAO,GAAG;AAChC,aAAK,QAAQ;AACb,aAAK,mBAAmB,OAAO;AAC/B;;AAEF,UAAM,QAAQ,KAAK,iBAAiB,UAClC,SAACH,KAA6C;AAA7C,YAAAE,MAAA,OAA6CF,KAAA,CAAA,GAA5C,YAASE,IAAA,CAAA,GAAE,KAAA,OAAAA,IAAA,CAAA,GAAA,CAAA;AAAC,WAAA,CAAA;AAAiB,WAAA,CAAA;AAAc,QAAAA,IAAA,CAAA;AAAM,eAAA,UAAU,OAAO;MAAjB,CAAkB;AAEvE,UAAI,UAAU,IAAI;AAChB,aAAK,SAAS,OAAO;AACrB;;AAGI,UAAA,KAAA,OACJ,KAAK,iBAAiB,OAAO,OAAO,CAAC,EAAE,CAAC,GAAC,CAAA;AAD1B,SAAA,CAAA;AAAE,UAAA,KAAA,OAAA,GAAA,CAAA,GAAA,CAAA,GAAC,UAAO,GAAA,CAAA;AAAS,SAAA,CAAA;AAAG,SAAA,CAAA;AAEvC,cAAQ,OAAO;;AAGX,IAAAC,uBAAO,UAAA,UAAb,SAAc,WAAkC;;;;;;;AAC9C,kBAAI,KAAK,UAAU,QAAW;AAC5B,uBAAO,CAAA,GAAA,KAAK,KAAK;;AAEH,qBAAM,CAAA,GAAA,OAAA,UAAM,QAAO,KAAA,MACjC,SAACC,UAAO;AAAK,uBAAA,UAAUA,QAAO,KAAK,MAAK,eAAeA,QAAO;cAAC,CAAA,CAChE;;AAFK,wBAAU,GAEf,KAAA;AACD,qBAAA,CAAA,GAAO,OAAO;;;;IACf;AACH,WAACD;EAAD,EA7C8C,YAAY;;AA+C1D,IAAA;;EAAA,WAAA;AAIE,aAAAE,gBACU,iBACA,gBACA,cAAqC;AAFrC,WAAe,kBAAf;AACA,WAAc,iBAAd;AACA,WAAY,eAAZ;AANF,WAAK,QAAQ,CAAA;AACb,WAAA,OAAsB,QAAQ,QAAO;;AAQvC,IAAAA,gBAAO,UAAA,UAAb,SAAc,WAAkC;;;;;YAC9B,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,YAAW,CAAE;;AAAlC,wBAAU,GAAwB,KAAA;;;;AAEtC,mBAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,KAAK;AACpC,0BAAU,KAAK,MAAM,CAAC;AAC5B,oBAAI,UAAU,OAAO,GAAG;AACtB,uBAAK,MAAM,OAAO,GAAG,CAAC;AACtB,yBAAA,CAAA,GAAO,OAAO;2BACL,KAAK,aAAa,OAAO,GAAG;AACrC,yBAAA,CAAA,GAAO,OAAO;;;;;AAKA,qBAAA,CAAA,GAAM,KAAK,gBAAe,CAAE;;AAAtC,wBAAU,GAA4B,KAAA;AAC5C,kBACE,YAAY,QACZ,KAAK,eAAe,OAAO,KAC3B,UAAU,OAAO,GACjB;AACA,uBAAA,CAAA,GAAO,OAAO;;AAEhB,kBAAI,KAAK,aAAa,OAAO,GAAG;AAC9B,qBAAK,MAAM,KAAK,OAAO;AACvB,uBAAA,CAAA,GAAO,OAAO;;AAEhB,mBAAK,MAAM,KAAK,OAAO;;;;;AAGzB,sBAAO;;;;;;;;;;;;;IAEV;AAEa,IAAAA,gBAAA,UAAA,cAAd,WAAA;;;;;;AAEQ,wBAAU,IAAI,QAAc,SAAC,SAAO;AACxC,0BAAU;cACZ,CAAC;AACK,wBAAU,KAAK;AACrB,mBAAK,OAAO;AACZ,qBAAA,CAAA,GAAM,OAAO;;AAAb,iBAAA,KAAA;AACA,qBAAA,CAAA,GAAO,OAAQ;;;;IAChB;AACH,WAACA;EAAD,EAAC;;ACrNK,SAAU,gBAAgB,OAAiB;AAC/C,MAAI,OAAO,WAAW,eAAe,OAAO,iBAAiB;AAC3D,WAAO,OAAO,gBAAgB,KAAK;aAEnC,OAAO,WAAW,eAClB,OAAO,UACP,OAAO,OAAO,iBACd;AACA,WAAO,OAAO,OAAO,gBAAgB,KAAK;SACrC;AACL,UAAM,IAAI,MAAM,8CAA8C;;AAElE;AAEgB,SAAA,WAAW,QAAgB,QAAc;AACvD,MAAM,QAAQ,IAAI,WAAW,MAAM;AACnC,kBAAgB,KAAK;AACrB,MAAM,SAAS,KAAK,OAAO,aAAP,MAAA,QAAuB,cAAA,CAAA,GAAA,OAAA,KAAK,GAAE,KAAA,CAAA,CAAA,EAC/C,QAAQ,OAAO,GAAG,EAClB,QAAQ,OAAO,GAAG,EAClB,QAAQ,MAAM,EAAE;AAEnB,SAAO,GAAG,OAAA,QAAU,GAAA,EAAA,OAAA,MAAM,EAAG,MAAM,GAAG,MAAM;AAC9C;ACgCA,IAAA;;EAAA,WAAA;AA2CE,aAAAC,kBACE,iBACA,qBACA,SAA8B;AAE9B,UAAM,WAAY,WAAA;AAChB,YACE,gBAAgB,eAAe,KAC/B,kBAAkB,mBAAmB,GACrC;AACA,iBAAO,eAAe,iBAAiB,mBAAmB;mBAE1D,aAAa,mBAAmB,KAChC,uBAAuB,OAAO,GAC9B;AACA,iBAAO,oBACL,iBACA,qBACA,OAAO;eAEJ;AACL,gBAAM,IAAI,MACR,oEAAoE;;QAGzE;AACD,WAAK,YAAY,SAAS;AAC1B,WAAK,SAAS,KAAK,aAAa,QAAQ;;AAlElC,IAAAA,kBAAY,UAAA,eAApB,SACE,UAA4B;AAE5B,UAAM,UAAU;QACd,UAAU,SAAC,OAAmB;AAC5B,cAAI,OAAO,MAAM,SAAS,UAAU;AAClC,mBAAO,gBACL,IAAI,MAAM,sBAAsB,CAAC;;AAGrC,cAAI;AACF,gBAAM,OAAO,KAAK,MAAM,MAAM,IAAc;AAC5C,gBAAI,oBAAoB,IAAI,GAAG;AAC7B,qBAAO,kBAAkB,IAAI;;AAE/B,mBAAO,gBACL,IAAI,MAAM,sBAAsB,CAAC;mBAE5B,OAAO;AACd,mBAAO,gBACL,IAAI,MAAM,sBAAsB,CAAC;;;QAIvC,WAAW,SAAC,SAAwB;AAAK,iBAAA,KAAK,UAAU,OAAO;QAAC;;AAGlE,aAAO,IAAI,gBACT,UACA,OAAO;;AAwCJ,IAAAA,kBAAA,UAAA,WAAP,WAAA;;;;;;;;AAC8B,mBAAA,MAAA,KAAA,cAAA,KAAK,MAAM;;;;;;AAAX,mBAAW,GAAA;AAAX,mBAAW;AAAtB,wBAAO;iCAChB,OAAO,CAAA;;AAAb,qBAAa,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAb,iBAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEH;AAEK,IAAAA,kBAAI,UAAA,OAAV,SAAW,SAAwB;;;;;AACjC,qBAAM,CAAA,GAAA,KAAK,OAAO,KAAK,OAAO,CAAC;;AAA/B,iBAAA,KAAA;;;;;;;;IACD;AAEK,IAAAA,kBAAA,UAAA,QAAN,WAAA;;;;YACE,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,OAAO,MAAK,CAAE;;AAAzB,iBAAA,KAAA;;;;;;;;IACD;AACH,WAACA;EAAD,EAAC;;AAED,IAAA;;EAAA,SAAA,QAAA;AAA6B,cAAKC,UAAA,MAAA;AAChC,aAAAA,SAAoB,cAA2B;AAC7C,UAAA,QAAA,OAAM,KAAA,MAAA,aAAa,OAAO,KAAE;AADV,YAAY,eAAZ;AAElB,aAAO,eAAe,OAAMA,SAAQ,SAAS;;;AAG/C,WAAA,eAAIA,SAAI,WAAA,QAAA;MAAR,KAAA,WAAA;AACE,eAAO,KAAK,aAAa;;;;IAC1B,CAAA;AAED,WAAA,eAAIA,SAAK,WAAA,SAAA;MAAT,KAAA,WAAA;AACE,eAAO,KAAK,aAAa;;;;IAC1B,CAAA;AAED,WAAA,eAAIA,SAAO,WAAA,WAAA;MAAX,KAAA,WAAA;AACE,eAAO,KAAK,aAAa;;;;IAC1B,CAAA;AACH,WAACA;EAAD,EAjB6B,KAAK;;AAqBlC,IAAA;;EAAA,WAAA;AAOE,aAAAC,kBACU,IACD,kBACC,kBACA,OAA+C;AAH/C,WAAE,KAAF;AACD,WAAgB,mBAAhB;AACC,WAAgB,mBAAhB;AACA,WAAK,QAAL;AAVH,WAAI,OAAkB;AACtB,WAAc,iBAAqB;AACnC,WAAa,gBAAqB;AAEjC,WAAW,cAAyB;;AASrC,IAAAA,kBAAM,SAAb,SACE,IACA,kBACA,kBACA,OAA+C;AAE/C,aAAO,IAAIA,kBAAiB,IAAI,kBAAkB,kBAAkB,KAAK;;AAG7D,IAAAA,kBAAA,UAAA,OAAd,WAAA;;;;;;;AACQ,mCAAqB,SACzBJ,UAA0B;AAK1B,uBAAA;kBACE;kBACA;kBACA;gBACD,EAAC,SAASA,SAAQ,IAAI;cAJvB;;;AAOgB,qBAAA,CAAA,GAAM,KAAK,MAAM,QAC/B,SAAC,GAAC;AACA,uBAAC,mBAAmB,CAAC,KAAK,EAAE,WAAW,MAAK,MAC3C,EAAE,SAAS,+BAA+B,EAAE,KAAK,MAAM,MAAK;cAD7D,CACgE,CACnE;;AAJK,wBAAU,GAIf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,uBAAO;kBAAA;;gBAAA;yBACE,QAAQ,SAAS,SAAS;AACnC,sBAAM,IAAI,QAAQ,QAAQ,KAAK;yBACtB,QAAQ,SAAS,qCAAqC;AAC/D,qBAAK,iBAAiB,QAAQ;AAC9B,oBAAI,CAAC,KAAK,kBAAkB;AAC1B,yBAAO;oBAAA;;kBAAA;;yBAGT,QAAQ,SAAS,+BACjB,CAAC,KAAK,kBACN;AACA,uBAAO;kBAAA;;gBAAA;yBAEP,QAAQ,SAAS,yDACjB;AACA,qBAAK,gBAAgB,QAAQ;AAC7B,uBAAO;kBAAA;;gBAAA;yBAEP,QAAQ,SAAS,sDACjB;AACA,sBAAM,IAAI,QAAQ,QAAQ,KAAK;;;;;;;;;;;IAGpC;AAED,IAAAI,kBAAA,UAAA,oBAAA,WAAA;AACE,UAAI,CAAC,KAAK,aAAa;AACrB,aAAK,cAAc,KAAK,KAAI;;AAE9B,aAAO,KAAK;;AAEhB,WAACA;EAAD,EAAC;;AAKD,SAAS,aAAa,QAAc;AAClC,MAAM,eAAe,KAAK,MAAM;AAChC,MAAM,SAAS,aAAa;AAC5B,MAAM,aAAa,IAAI,WAAW,MAAM;AAExC,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,eAAW,CAAC,IAAI,aAAa,WAAW,CAAC;;AAG3C,SAAO;AACT;AAEA,IAAA;;EAAA,WAAA;AAQE,aACEC,gBAAA,SACQ,OAA+C;AAFzD,UAeC,QAAA;AAbS,WAAK,QAAL;AATH,WAAI,OAAY;AAWrB,WAAK,SAAS,QAAQ;AACtB,WAAK,eAAe,QAAQ;AAC5B,UAAI,QAAQ,KAAK,SAAS,SAAS;AACjC,cAAM,IAAI,MAAM,sBAAsB;;AAExC,WAAK,OAAO,QAAQ;AACpB,WAAK,eAAe,IAAI,eACtB,WAAA;AAAM,eAAA,MAAK,eAAc;MAAE,GAC3B,SAAC,GAAM;AAAA,eAAA,MAAM,QAAQ,EAAE,SAAS;MAAO,GACvC,SAAC,GAAC;AAAK,eAAA,MAAM,QAAQ,EAAE,SAAS;MAA4B,CAAA;;AAIzD,IAAAA,gBAAA,SAAP,SACE,SACA,OAA+C;AAE/C,aAAO,IAAIA,gBAAe,SAAS,KAAK;;AAG1C,WAAA,eAAIA,gBAAU,WAAA,cAAA;MAAd,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAEO,IAAAA,gBAAA,UAAA,iBAAR,WAAA;AAAA,UAuBC,QAAA;AAtBC,eAAS,eACP,GAAoB;AAOpB,eAAO;UACL;UACA;UACA;UACA;UACA;QACD,EAAC,SAAS,EAAE,IAAI;;AAEnB,aAAO,KAAK,MAAM,QAChB,SAAC,GAAC;AACA,eAAA,eAAe,CAAC,KAChB,EAAE,YAAY,MAAK,UACnB,EAAE,kBAAkB,MAAK;MAFzB,CAEqC;;AAIpC,IAAAA,gBAAA,UAAA,cAAP,WAAA;;;;;;AAEoB,qBAAA,CAAA,GAAA,QAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AACA,uBAAA,MAAM,QACN,CAAC,wBAAwB,qBAAqB,EAAE,SAAS,EAAE,IAAI;cAD/D,CACgE,CACnE,CAAA;;AAJK,wBAAU,GAIf,KAAA;AACG,kBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,oBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,kBAAA,EAAA,QAAQ,SAAS,8BAAjB,QAA6C,CAAA,GAAA,CAAA;AACtD,kBAAI,QAAQ,KAAK,SAAS,SAAS;AACjC,sBAAM,IAAI,MAAM,sBAAsB;;AAExC,mBAAK,OAAO,QAAQ;AACpB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,wBAAjB,QAAuC,CAAA,GAAA,CAAA;AAC1C,uBAAS,aAAa,QAAQ,KAAK;iCACnC,MAAM,CAAA;;AAAZ,qBAAY,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAZ,iBAAA,KAAA;;;AACK,kBAAI,QAAQ,SAAS,uBAAuB;AAGjD,uBAAS,CAAA,GAAA,CAAA;;;;;;;;;;;;;IAGd;AAEM,IAAAA,gBAAA,UAAA,mBAAP,WAAA;;;;;;AAEoB,qBAAA,CAAA,GAAA,QAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AACA,uBAAA,MAAM,QACN;kBACE;kBACA;gBACD,EAAC,SAAS,EAAE,IAAI;cAJjB,CAIkB,CACrB,CAAA;;AAPK,wBAAU,GAOf,KAAA;AACG,kBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,oBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,kBAAA,EAAA,QAAQ,SAAS,8BAAjB,QAA6C,CAAA,GAAA,CAAA;AACtD,kBAAI,QAAQ,KAAK,SAAS,SAAS;AACjC,sBAAM,IAAI,MAAM,sBAAsB;;AAExC,mBAAK,OAAO,QAAQ;AACpB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,mCAAjB,QAAkD,CAAA,GAAA,CAAA;AACrD,qBAAA,CAAA,GAAA,QAAA,QAAQ,KAAK,CAAA;;AAAnB,qBAAmB,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAnB,iBAAA,KAAA;;;AACK,kBAAI,QAAQ,SAAS,kCAAkC;AAG5D,uBAAS,CAAA,GAAA,CAAA;;;;;;;;;;;;;IAGd;AACH,WAACA;EAAD,EAAC;;AAID,IAAA;;EAAA,WAAA;AAOE,aACEC,eAAA,SACQ,OAA+C;AAA/C,WAAK,QAAL;AARH,WAAI,OAAW;AAUpB,WAAK,SAAS,QAAQ;AACtB,WAAK,eAAe,QAAQ;AAC5B,UAAI,QAAQ,KAAK,SAAS,QAAQ;AAChC,cAAM,IAAI,MAAM,sBAAsB;;AAExC,WAAK,OAAO,QAAQ;;AAGf,IAAAA,eAAA,SAAP,SACE,SACA,OAA+C;AAE/C,aAAO,IAAIA,eAAc,SAAS,KAAK;;AAGzC,WAAA,eAAIA,eAAI,WAAA,QAAA;MAAR,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAEM,IAAAA,eAAA,UAAA,aAAP,WAAA;;;;;;;AAEoB,qBAAA,CAAA,GAAA,QAAM,KAAK,MAAM,QAC/B,SAAC,GAAC;AACA,wBAAC,EAAE,SAAS,gCACV,EAAE,SAAS,yBACX,EAAE,SAAS,yBACb,EAAE,YAAY,MAAK,UACnB,EAAE,kBAAkB,MAAK;cAJzB,CAIqC,CACxC,CAAA;;AAPK,wBAAU,GAOf,KAAA;AACG,kBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,oBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,kBAAA,EAAA,QAAQ,SAAS,8BAAjB,QAA6C,CAAA,GAAA,CAAA;AACtD,kBAAI,QAAQ,KAAK,SAAS,QAAQ;AAChC,sBAAM,IAAI,MAAM,sBAAsB;;AAExC,mBAAK,OAAO,QAAQ;AACpB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,uBAAjB,QAAsC,CAAA,GAAA,CAAA;AACzC,qBAAA,CAAA,GAAA,QAAA,QAAQ,KAAK,CAAA;;AAAnB,qBAAmB,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAnB,iBAAA,KAAA;;;AACK,kBAAI,QAAQ,SAAS,sBAAsB;AAGhD,uBAAS,CAAA,GAAA,CAAA;;;;;;;;;;;;;IAGd;AACH,WAACA;EAAD,EAAC;;AAMD,IAAA;;EAAA,WAAA;AAGE,aAAAC,eACS,YACC,MACD,gBACC,OAA+C;AAHhD,WAAU,aAAV;AACC,WAAI,OAAJ;AACD,WAAc,iBAAd;AACC,WAAK,QAAL;AANH,WAAI,OAAc;;AASlB,IAAAA,eAAM,SAAb,SACE,YACA,MACA,gBACA,OAA+C;AAE/C,aAAO,IAAIA,eAAc,YAAY,MAAM,gBAAgB,KAAK;;AAGlE,WAAA,eAAIA,eAAE,WAAA,MAAA;MAAN,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAED,WAAA,eAAIA,eAAI,WAAA,QAAA;MAAR,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAED,WAAA,eAAIA,eAAM,WAAA,UAAA;MAAV,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAEM,IAAAA,eAAA,UAAC,OAAO,aAAa,IAA5B,WAAA;;;;;;;AAEoB,qBAAA,CAAA,GAAA,QAAM,KAAK,MAAM,QAC/B,SAAC,GAAC;AACA,uBAAC,EAAE,SAAS,iCAAiC,EAAE,YAAY,MAAK,MAC/D,EAAE,SAAS,+BAA+B,EAAE,KAAK,OAAO,MAAK;cAD9D,CACiE,CACpE,CAAA;;AAJK,wBAAU,GAIf,KAAA;AACG,kBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,qBAAM,CAAA,GAAA,EAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,oBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,kBAAA,EAAA,QAAQ,SAAS,6BAAjB,QAA4C,CAAA,GAAA,CAAA;AACrD,kBAAI,QAAQ,KAAK,SAAS,WAAW;AACnC,qBAAK,OAAO,QAAQ;qBACf;AACL,sBAAM,IAAI,MAAM,sBAAsB;;AAExC,qBAAM,CAAA,GAAA,EAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,+BAAjB,QAA8C,CAAA,GAAA,EAAA;oBACnD,QAAQ,KAAK,SAAS,SAAtB,QAA6B,CAAA,GAAA,CAAA;iCACzB,eAAe,OAAO,SAAS,KAAK,KAAK,CAAC,CAAA;;AAAhD,qBAAgD,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAhD,iBAAA,KAAA;;;oBACS,QAAQ,KAAK,SAAS,QAAtB,QAA4B,CAAA,GAAA,EAAA;iCAC/B,cAAc,OAAO,SAAS,KAAK,KAAK,CAAC,CAAA;;AAA/C,qBAA+C,CAAA,GAAA,GAAA,KAAA,CAAA;;AAA/C,iBAAA,KAAA;;;AAEA,oBAAM,IAAI,MAAM,yBAAyB,OAAA,QAAQ,KAAK,IAAI,CAAE;;;;AAG9D,oBAAM,IAAI,MAAM,4BAAA,OAA4B,QAAQ,IAAI,CAAE;;;;;;;;;;;IAG/D;AACH,WAACA;EAAD,EAAC;;AAID,IAAA;;EAAA,WAAA;AAKE,aAAAC,oBACS,YACC,MACD,gBACC,OAA+C;AAHhD,WAAU,aAAV;AACC,WAAI,OAAJ;AACD,WAAc,iBAAd;AACC,WAAK,QAAL;AARH,WAAI,OAAoB;AACvB,WAAO,UAAY;AACnB,WAAQ,WAAY;;AASrB,IAAAA,oBAAM,SAAb,SACE,YACA,MACA,gBACA,OAA+C;AAE/C,aAAO,IAAIA,oBAAmB,YAAY,MAAM,gBAAgB,KAAK;;AAGvE,WAAA,eAAIA,oBAAE,WAAA,MAAA;MAAN,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAED,WAAA,eAAIA,oBAAY,WAAA,gBAAA;MAAhB,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAED,WAAA,eAAIA,oBAAM,WAAA,UAAA;MAAV,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAED,WAAA,eAAIA,oBAAS,WAAA,aAAA;MAAb,KAAA,WAAA;AACE,eAAO,KAAK,KAAK;;;;IAClB,CAAA;AAEc,IAAAA,oBAAA,UAAA,QAAf,WAAA;;;;;;;AAEoB,qBAAA,CAAA,GAAA,QAAM,KAAK,MAAM,QAC/B,SAAC,GAAC;AACA,wBAAE,EAAE,QAAQ,4CACV,EAAE,QAAQ,4CACV,EAAE,YAAY,MAAK,MACpB,EAAE,SAAS,+BAA+B,EAAE,KAAK,OAAO,MAAK;cAH9D,CAGiE,CACpE,CAAA;;AANK,wBAAU,GAMf,KAAA;AACG,kBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,qBAAM,CAAA,GAAA,CAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,oBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,kBAAA,EAAA,QAAQ,SAAS,6BAAjB,QAA4C,CAAA,GAAA,CAAA;AACrD,kBAAI,QAAQ,KAAK,SAAS,iBAAiB;AACzC,qBAAK,OAAO,QAAQ;AACpB,uBAAM,CAAA,GAAA,CAAA;qBACD;AACL,sBAAM,IAAI,MAAM,sBAAsB;;;AAE/B,kBAAA,EAAA,QAAQ,SAAS,0CAAjB,QAAyD,CAAA,GAAA,CAAA;AAC5D,qBAAA,CAAA,GAAA,QAAA,QAAQ,KAAK,CAAA;;AAAnB,qBAAmB,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAnB,iBAAA,KAAA;;;AACK,kBAAI,QAAQ,SAAS,yCAAyC;AACnE,uBAAS,CAAA,GAAA,CAAA;qBACJ;AACL,sBAAM,IAAI,MAAM,4BAAA,OAA4B,QAAQ,IAAI,CAAE;;;;;;;;;;;;IAG/D;AAEM,IAAAA,oBAAA,UAAC,OAAO,aAAa,IAA5B,WAAA;;;;;AACE,kBAAI,KAAK,SAAS;AAChB,sBAAM,IAAI,MAAM,gCAAgC;;AAElD,mBAAK,WAAW;iCACT,KAAK,MAAK,CAAE,CAAA;;AAAnB,qBAAoB,CAAA,GAAA,GAAA,KAAA,CAAA;;;;IACrB;AAEK,IAAAA,oBAAA,UAAA,oBAAN,WAAA;;;;;;;AACE,kBAAI,KAAK,UAAU;AACjB,sBAAM,IAAI,MAAM,+BAA+B;;AAEjD,mBAAK,UAAU;;;;AACO,mBAAA,MAAA,KAAA,cAAA,KAAK,MAAK,CAAE;;;;;;AAAA,iBAAA;AAAZ,mBAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGnC;AACH,WAACA;EAAD,EAAC;;AAMK,SAAU,cAAc,MAAkB;AAC9C,SAAO,KAAK,SAAS;AACvB;AAEM,SAAU,mBACd,MAAkB;AAElB,SAAO,KAAK,SAAS;AACvB;AAEA,IAAA;;EAAA,WAAA;AAIE,aAAAC,YACU,UACA,OACA,QAAwB;AAFxB,WAAQ,WAAR;AACA,WAAK,QAAL;AACA,WAAM,SAAN;AANH,WAAI,OAAe;AAClB,WAAI,OAAY;;AAQjB,IAAAA,YAAA,SAAP,SACE,UACA,OACA,QAAwB;AAExB,aAAO,IAAIA,YAAW,UAAU,OAAO,MAAM;;AAG/C,WAAA,eAAIA,YAAE,WAAA,MAAA;MAAN,KAAA,WAAA;AACE,eAAO,KAAK,SAAS;;;;IACtB,CAAA;AAED,WAAA,eAAIA,YAAM,WAAA,UAAA;MAAV,KAAA,WAAA;AACE,eAAO,KAAK,SAAS;;;;IACtB,CAAA;AAED,WAAA,eAAIA,YAAa,WAAA,iBAAA;MAAjB,KAAA,WAAA;AACE,eAAO,KAAK,SAAS;;;;IACtB,CAAA;AAED,WAAA,eAAIA,YAAM,WAAA,UAAA;MAAV,KAAA,WAAA;AACE,eAAO,KAAK,SAAS;;;;IACtB,CAAA;AAED,WAAA,eAAIA,YAAK,WAAA,SAAA;MAAT,KAAA,WAAA;AACE,eAAO,KAAK,SAAS;;;;IACtB,CAAA;AAEK,IAAAA,YAAA,UAAA,SAAN,WAAA;;;;;;YACE,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK;gBACrB,MAAM;cACP,CAAA,CAAC;;AAFF,iBAAA,KAAA;;;;yBAGsB,KAAA,cAAA,IAAI;;;;;;AAAA,iBAAA;AAAJ,mBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAG3B;AAED,IAAAA,YAAA,UAAC,OAAO,aAAa,IAArB,WAAA;AAAA,UA4DC,QAAA;AA3DC,aAAO;QACL,MAAM,WAAA;AAAA,iBAAA,UAAA,OAAA,QAAA,QAAA,WAAA;;;;;;AACJ,sBAAI,KAAK,MAAM;AACb,2BAAO,CAAA,GAAA,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;;AAEzB,yBAAA,CAAA,GAAM,KAAK,MAAM,QAC/B,SAAC,GAAC;AACA,2BAAC,EAAE,SAAS,mBAAmB,EAAE,SAAS,OAAOf,OAAK,MACrD,EAAE,SAAS,gCACV,EAAE,gBAAgBA,OAAK;kBAFzB,CAE4B,CAC/B;;AALK,4BAAU,GAKf,KAAA;AACG,sBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,yBAAO,CAAA,GAAA,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;;AAC9B,sBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,wBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,sBAAA,EAAA,QAAQ,SAAS,iBAAjB,QAAgC,CAAA,GAAA,CAAA;AACzC,uBAAK,OAAO;AACZ,uBAAK,WAAW,QAAQ;AACxB,yBAAO,CAAA,GAAA,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;;AAC9B,sBAAA,EAAA,QAAQ,SAAS,8BAAjB,QAA6C,CAAA,GAAA,CAAA;AAC9B,yBAAA,CAAA,GAAM,KAAK,MAAM,QACvC,SAAC,GAAC;AACA,2BAAA,EAAE,SAAS,+BACX,EAAE,KAAK,OAAO,QAAQ,KAAK;kBAD3B,CAC6B,CAChC;;AAJK,oCAAkB,GAIvB,KAAA;AACD,sBAAI,oBAAoB,MAAM;AAC5B,2BAAO,CAAA,GAAA,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;6BAC9B,gBAAgB,SAAS,SAAS;AAC3C,0BAAM,IAAI,QAAQ,gBAAgB,KAAK;6BAC9B,gBAAgB,SAAS,6BAA6B;AAC/D,wBAAI,gBAAgB,KAAK,SAAS,WAAW;AACrC,oCAAc,cAAc,OAChC,KAAK,IACL,gBAAgB,MAChB,gBAAgB,kBAChB,KAAK,KAAK;AAEZ,6BAAO,CAAA,GAAA,EAAE,OAAO,aAAa,MAAM,MAAK,CAAE;+BACjC,gBAAgB,KAAK,SAAS,iBAAiB;AAClD,yCAAmB,mBAAmB,OAC1C,KAAK,IACL,gBAAgB,MAChB,gBAAgB,kBAChB,KAAK,KAAK;AAEZ,6BAAO,CAAA,GAAA,EAAE,OAAO,kBAAkB,MAAM,MAAK,CAAE;2BAC1C;AACL,4BAAM,IAAI,MACR,yBAAyB,OAAA,gBAAgB,KAAK,MAAO,GAAA,CAAA;;yBAGpD;AACL,0BAAM,IAAI,MAAM,4BAAA,OAA4B,gBAAgB,IAAI,CAAE;;;AAGpE,wBAAM,IAAI,MAAM,4BAAA,OAA4B,QAAQ,IAAI,CAAE;;;;;;;;UAE7D,CAAA;QAAA;;;AAGP,WAACe;EAAD,EAAC;;AAID,IAAA;;EAAA,WAAA;AAeE,aAAAC,UACE,iBACA,qBACA,SAA8B;AAHhC,UAwBC,QAAA;AAhCO,WAAS,YAAY;AAa3B,WAAK,SAAU,WAAA;AACb,YAAI,gBAAgB,eAAe,GAAG;AACpC,iBAAO,IAAI,iBACT,iBACA,mBAAsC;eAEnC;AACL,iBAAO,IAAI,iBACT,iBACA,qBACA,OAA+B;;QAGpC;AACD,WAAK,mBAAmB,KAAK,OAAO,SAAQ,EAAG,OAAO,aAAa,EAAC;AACpE,WAAK,eAAe,IAAI,sBACtB,WAAA;AAAM,eAAA,MAAK,gBAAe;MAAE,GAC5B,SAAC,GAAM;AAAA,eAAA,EAAE,SAAS;MAAO,CAAA;;AAIf,IAAAA,UAAA,UAAA,kBAAd,WAAA;;;;;YACiB,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,iBAAiB,KAAI,CAAE;;AAA3C,uBAAS,GAAkC,KAAA;AACjD,qBAAA,CAAA,GAAO,OAAO,OAAO,OAAO,OAAO,KAAK;;;;IACzC;AAED,WAAA,eAAIA,UAAS,WAAA,aAAA;MAAb,KAAA,WAAA;AACE,eAAO,KAAK,OAAO;;;;IACpB,CAAA;AAED,IAAAA,UAAA,UAAA,OAAA,WAAA;AAAA,UAuBC,QAAA;AAtBC,UAAI,KAAK,gBAAgB,QAAW;AAClC,eAAO,KAAK;;AAEd,WAAK,cAAe,WAAA;AAAA,eAAA,UAAA,OAAA,QAAA,QAAA,WAAA;;;;;AAClB,oBAAI,KAAK,YAAY,QAAW;AAC9B,yBAAO;oBAAA;;kBAAA;;AAEO,uBAAA,CAAA,GAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AAAK,yBAAA,EAAE,SAAS;gBAAX,CAA4B,CACpC;;AAFK,0BAAU,GAEf,KAAA;AACD,oBAAI,YAAY,MAAM;AACpB,wBAAM,IAAI,MAAM,8BAA8B;;AAEhD,oBAAI,QAAQ,SAAS,SAAS;AAC5B,wBAAM,IAAI,QAAQ,QAAQ,KAAK;;AAEjC,oBAAI,QAAQ,SAAS,mBAAmB;AACtC,wBAAM,IAAI,MAAM,yBAAyB;;AAE3C,qBAAK,UAAU,QAAQ;;;;;;;QACxB,CAAA;MAAA,EAAA;AACD,aAAO,KAAK;;AAGR,IAAAA,UAAS,UAAA,YAAf,SAAgB,QAA2B;;;;;YACzC,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACA,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK;gBACrB,MAAM;gBACN,SAAS;cACV,CAAA,CAAC;;AAHF,iBAAA,KAAA;AAIgB,qBAAA,CAAA,GAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AAAK,uBAAA,EAAE,SAAS;cAAX,CAA4B,CACpC;;AAFK,wBAAU,GAEf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,sBAAM,IAAI,MAAM,0BAA0B;;AAE5C,kBAAI,QAAQ,SAAS,SAAS;AAC5B,sBAAM,IAAI,QAAQ,QAAQ,KAAK;;AAEjC,kBAAI,QAAQ,SAAS,mBAAmB;AACtC,sBAAM,IAAI,MAAM,yBAAyB;;AAE3C,mBAAK,UAAU,QAAQ;AACvB,qBAAO,CAAA,GAAA,KAAK,OAAO;;;;IACpB;AAEK,IAAAA,UAAS,UAAA,YAAf,SAAgB,OAAiB;;;;;YAC/B,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACM,uBAAS,KAAK,OAAO,aAAY,MAAnB,QAAM,cAAA,CAAA,GAAA,OAAiB,KAAK,GAAA,KAAA,CAAA,CAAA;AAChD,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK;gBACrB,MAAM;gBACN,OAAO;cACR,CAAA,CAAC;;AAHF,iBAAA,KAAA;;;;;;;;IAID;AAEK,IAAAA,UAAA,UAAA,cAAN,WAAA;;;;;;YACE,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACA,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK,EAAE,MAAM,4BAA2B,CAAE,CAAC;;AAA7D,iBAAA,KAAA;AACgB,qBAAA,CAAA,GAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AAAK,uBAAA,EAAE,SAAS;cAAX,CAAyC,CACjD;;AAFK,wBAAU,GAEf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,sBAAM,IAAI,MAAM,wBAAwB;yBAC/B,QAAQ,SAAS,SAAS;AACnC,sBAAM,IAAI,QAAQ,QAAQ,KAAK;yBACtB,QAAQ,SAAS,gCAAgC;AAC1D,uBAAA,CAAA,GAAO,iBAAiB,OACtB,QAAQ,SACR,UACA,KAAA,KAAK,aAAS,QAAA,OAAA,SAAA,SAAA,GAAA,+BAA8B,YAC1C,KAAA,KAAK,aAAS,QAAA,OAAA,SAAA,SAAA,GAAA,+BAA8B,MAC9C,KAAK,YAAY,CAClB;qBACI;AACL,sBAAM,IAAI,MAAM,yBAAyB;;;;;IAE5C;AAEK,IAAAA,UAAA,UAAA,aAAN,WAAA;;;;;YACE,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACA,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK,EAAE,MAAM,2BAA0B,CAAE,CAAC;;AAA5D,iBAAA,KAAA;AACgB,qBAAA,CAAA,GAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AAAK,uBAAA,EAAE,SAAS;cAAX,CAAuC,CAC/C;;AAFK,wBAAU,GAEf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,sBAAM,IAAI,MAAM,uBAAuB;yBAC9B,QAAQ,SAAS,SAAS;AACnC,sBAAM,IAAI,QAAQ,QAAQ,KAAK;yBACtB,QAAQ,SAAS,8BAA8B;AACxD,sBAAM,IAAI,MAAM,yBAAyB;;;;;;;;;IAE5C;AAEK,IAAAA,UAAA,UAAA,WAAN,SAAe,MAAY,gBAAuB;;;;;YAChD,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACA,mBAAK,KAAK,KAAK,MAAM,WAAW,QAAQ,EAAE;AAC1C,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK;gBACrB,MAAM;gBACN,kBAAkB;gBAClB;cACD,CAAA,CAAC;;AAJF,iBAAA,KAAA;AAKgB,qBAAA,CAAA,GAAM,KAAK,aAAa,QACtC,SAAC,GAAM;AAAA,uBAAA,EAAE,SAAS,+BAA+B,EAAE,KAAK,OAAO,KAAK;cAAE,CAAA,CACvE;;AAFK,wBAAU,GAEf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,sBAAM,IAAI,MAAM,uBAAuB;yBAC9B,QAAQ,SAAS,SAAS;AACnC,sBAAM,IAAI,QAAQ,QAAQ,KAAK;yBACtB,QAAQ,SAAS,6BAA6B;AACvD,uBAAO,CAAA,GAAA,QAAQ,IAAI;qBACd;AACL,sBAAM,IAAI,MAAM,yBAAyB;;;;;IAE5C;AAEK,IAAAA,UAAU,UAAA,aAAhB,SAAiB,QAAc;;;;;YAC7B,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACA,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK;gBACrB,MAAM;gBACN,SAAS;cACV,CAAA,CAAC;;AAHF,iBAAA,KAAA;AAIgB,qBAAM,CAAA,GAAA,KAAK,aAAa,QACtC,SAAC,GAAM;AAAA,uBAAA,EAAE,SAAS,+BAA+B,EAAE,YAAY;cAAM,CAAA,CACtE;;AAFK,wBAAU,GAEf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,sBAAM,IAAI,MAAM,uBAAuB;yBAC9B,QAAQ,SAAS,SAAS;AACnC,sBAAM,IAAI,QAAQ,QAAQ,KAAK;yBACtB,QAAQ,SAAS,6BAA6B;AACvD,uBAAO;kBAAA;;gBAAA;qBACF;AACL,sBAAM,IAAI,MAAM,yBAAyB;;;;;IAE5C;AAEK,IAAAA,UAAA,UAAA,mBAAN,WAAA;;;;;YACE,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,KAAI,CAAE;;AAAjB,iBAAA,KAAA;AACA,qBAAA,CAAA,GAAM,KAAK,OAAO,KAAK,EAAE,MAAM,kBAAiB,CAAE,CAAC;;AAAnD,iBAAA,KAAA;AACI,kBAAA,CAAA,CAAC,KAAK,UAAN,QAAe,CAAA,GAAA,CAAA;AACD,qBAAA,CAAA,GAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AAAK,uBAAA,EAAE,SAAS;cAAX,CAA6B,CACrC;;AAFK,wBAAU,GAEf,KAAA;AACD,kBAAI,YAAY,MAAM;AACpB,sBAAM,IAAI,MAAM,2BAA2B;yBAClC,QAAQ,SAAS,SAAS;AACnC,sBAAM,IAAI,QAAQ,QAAQ,KAAK;yBACtB,QAAQ,SAAS,oBAAoB;AAC9C,uBAAA,CAAA,GAAO,WAAW,OAChB,QAAQ,UACR,KAAK,cACL,KAAK,MAAM,CACZ;;AAEH,oBAAM,IAAI,MAAM,yBAAyB;YAE3C,KAAA;AAAA,qBAAA,CAAA,GAAO,MAAS;;;;IACjB;AAEM,IAAAA,UAAA,UAAA,SAAP,WAAA;;;;;;;;AAGI,mBAAK,YAAY;;;AAEC,qBAAA,CAAA,GAAA,QAAM,KAAK,aAAa,QACtC,SAAC,GAAC;AACA,uBAAA,EAAE,SAAS,uCACX,EAAE,SAAS;cADX,CAC6B,CAChC,CAAA;;AAJK,wBAAU,GAIf,KAAA;AACG,kBAAA,EAAA,YAAY,MAAZ,QAAgB,CAAA,GAAA,CAAA;AAClB,qBAAM,CAAA,GAAA,EAAA;;AACG,kBAAA,EAAA,QAAQ,SAAS,SAAjB,QAAwB,CAAA,GAAA,CAAA;AACjC,oBAAM,IAAI,QAAQ,QAAQ,KAAK;;AACtB,kBAAA,EAAA,QAAQ,SAAS,qCAAjB,QAAoD,CAAA,GAAA,CAAA;AACvD,qBAAA,CAAA,GAAA,QAAA,iBAAiB,OACrB,QAAQ,SACR,QAAQ,kBACR,KAAA,KAAK,aAAS,QAAA,OAAA,SAAA,SAAA,GAAA,+BAA8B,YAC1C,KAAA,KAAK,aAAS,QAAA,OAAA,SAAA,SAAA,GAAA,+BAA8B,MAC9C,KAAK,YAAY,CAClB,CAAA;;AAND,qBAMC,CAAA,GAAA,GAAA,KAAA,CAAA;;AAND,iBAAA,KAAA;;;AAOS,kBAAA,EAAA,QAAQ,SAAS,oBAAjB,QAAmC,CAAA,GAAA,EAAA;AACtC,qBAAA,CAAA,GAAA,QAAA,WAAW,OACf,QAAQ,UACR,KAAK,cACL,KAAK,MAAM,CACZ,CAAA;;AAJD,qBAIC,CAAA,GAAA,GAAA,KAAA,CAAA;;AAJD,iBAAA,KAAA;;YAMA,KAAA;AAAA,oBAAM,IAAI,MAAM,yBAAyB;;;;;;AAI7C,mBAAK,YAAY;;;;;;;;;;;;;IAEpB;AAEK,IAAAA,UAAA,UAAA,QAAN,WAAA;;;;YACE,KAAA;AAAA,qBAAA,CAAA,GAAM,KAAK,OAAO,MAAK,CAAE;;AAAzB,iBAAA,KAAA;;;;;;;;IACD;AACH,WAACA;EAAD,EAAC;;",
  "names": ["d", "b", "v", "WebSocketClient", "_this", "resolve", "_a", "MessageQueue", "_b", "MessageQueueWithError", "message", "SharedEndQueue", "LowLevelRTClient", "RTError", "RTInputAudioItem", "RTAudioContent", "RTTextContent", "RTMessageItem", "RTFunctionCallItem", "RTResponse", "RTClient"]
}
